<?xml version="1.0"?>
<project name="MGDF" default="all" basedir="..\" xmlns="http://nant.sf.net/release/0.92/nant.xsd">

	<property name="nant.settings.currentframework" value="net-4.5"/>
	<include buildfile="Automation\Functions.include"/>
  
	<description>MGDF Build Script</description>

	<property name="builddate" value="${year.now}-${month.now}-${day.now}"/>
	<!-- Update the major.minor version number here whenever a new release is planned -->
	<property name="buildnumber" value="0.9.${year.since2007}${month.now}${day.now}.${hour.now}${minute.now}"/>

	<property name="msbuild_target" value="debug"/>
  <property name="msplatform_target" value="Win32"/>
  <property name="program_files_path" value="${environment::get-variable('ProgramFiles(x86)')}" />
	<property name="nunit_exe_path" value="${program_files_path}\NUnit 2.4.8\bin\nunit-console.exe"/>
	<property name="nantcontrib_path" value="${program_files_path}\NantContrib-0.85\bin"/>
  <property name="vc_install_path" value="${program_files_path}\Microsoft Visual Studio 11.0" />
  <property name="windows_sdk_path" value="c:\program files\Microsoft SDKs\Windows\v6.0A" />
  <property name="doxygen_path" value="${program_files_path}\doxygen\bin\doxygen.exe" />
  <property name="sevenzip_path" value="${program_files_path}\7zip\7za.exe" />
  <property name="aspnetcompiler_exe_path" value="C:\Windows\Microsoft.Net\Framework\v2.0.50727\aspnet_compiler.exe"/>
  <property name="ilmerge_exe_path" value="${program_files_path}\Microsoft\Ilmerge\Ilmerge.exe"/>
  
	<!-- default target  -->
	<target name="all" depends="build, test, documentation, distro" description="build, test, and create distro"/>

	<!-- Builds the MGDF core component -->
	<target name="build" description="Compiles the MGDF core">

		<loadtasks assembly="${nantcontrib_path}\NAnt.Contrib.Tasks.dll" />
		
		<echo message="Setting build version number to: ${buildnumber}"/>
		<echo message="##teamcity[buildNumber '${buildnumber}']"/>

		<createsolutioninfo product="Matchstick game development framework" version="${buildnumber}" solutionInfoFile="${project::get-base-directory()}\Src\GamesManager\SolutionInfo.cs" />
    <mgdfversion version="${buildnumber}" versionFile="${project::get-base-directory()}\Src\core\common\MGDFVersionInfo.cpp" />

    <echo message="adding dependant libraries to environment variables..."/>
    <setenv>
     <variable name="LIB" value="${windows_sdk_path}\lib;${vc_install_path}\VC\ATLMFC\LIB;${vc_install_path}\VC\LIB" />    
     <variable name="INCLUDE" value="${windows_sdk_path}\include;${vc_install_path}\VC\ATLMFC\INCLUDE;${vc_install_path}\VC\INCLUDE" />
    </setenv>
    
		<echo message="Building MGDF vendor libraries..."/>
		<msbuild verbose="true" verbosity="Detailed" failonerror="true" project="..\vendor\libs.sln">
			<property name="Configuration" value="${msbuild_target}"/>
      <property name="Platform" value="${msplatform_target}"/>
		</msbuild>
		
		<echo message="Building MGDF core..."/>
		<msbuild verbose="true" verbosity="Detailed" failonerror="true" project="Matchstick.sln">
			<property name="Configuration" value="${msbuild_target}"/>
      <property name="Platform" value="${msplatform_target}"/>
		</msbuild>

		<echo message="Copying vendor libs into MGDF core bin directory..."/>
		<copy todir="bin\${msbuild_target}">
			<fileset basedir="..\vendor\lib\${msplatform_target}\${msbuild_target}">
				<include name="*.dll" />
			</fileset>
		</copy>
	</target>

	<target name="test" description="Runs the MGDF core unit tests">
		<echo message="Running MGDF GamesManager unit tests..."/>
		<exec program="${nunit_exe_path}" output="${project::get-base-directory()}\GamesManager.Tests-Results.txt" failonerror="false" resultproperty="testresult.gamesmanager" workingdir="tests\GamesManager.Tests\bin\${msplatform_target}\${msbuild_target}">
			<arg value="GamesManager.Tests.dll" />
			<arg value="/xml=${project::get-base-directory()}\GamesManager.Tests-Results.xml" />
			<arg value="/nologo" />
			<arg value="/nodots" />
		</exec>
		<echo message="##teamcity[publishArtifacts '${project::get-base-directory()}\GamesManager.Tests-Results.txt']"/>

		<nunit2report out="${project::get-base-directory()}\GamesManager.Tests-Results.html">
  			<fileset>
    				<includes name="${project::get-base-directory()}\GamesManager.Tests-Results.xml" />
  			</fileset>
		</nunit2report>
		<echo message="##teamcity[publishArtifacts '${project::get-base-directory()}\GamesManager.Tests-Results.html']"/>

		<echo message="Running MGDF core unit tests..."/>
		<exec program="${project::get-base-directory()}\..\vendor\bin\${msplatform_target}\${msbuild_target}\WinUnit.exe" output="${project::get-base-directory()}\core.tests-Results.txt" failonerror="false" resultproperty="testresult.core" workingdir="bin\${msplatform_target}\${msbuild_target}">
			<arg value="-b" />
			<arg value="core.tests.dll" />
		</exec>
		<echo message="##teamcity[publishArtifacts '${project::get-base-directory()}\core.tests-Results.txt']"/>

		<!-- Check the results and fail if necessary -->
		<fail message="Failures reported in MGDF GamesManager unit tests." unless="${int::parse(testresult.gamesmanager)==0}" />
		<fail message="Failures reported in MGDF core unit tests." unless="${int::parse(testresult.core)==0}" />

	</target>

	<target name="documentation" description="Generates source code documentation for the MGDF framework">
		<exec program="${doxygen_path}" failonerror="false" workingdir="${project::get-base-directory()}\automation">
			<arg value="${project::get-base-directory()}\automation\documentation.Doxyfile" />
		</exec>
	</target>

  <target name="distro" description="Generates the MGDF distributable package">
    <delete file="${project::get-base-directory()}\bin\${msplatform_target}\${msbuild_target}\core.tests.dll" />
    <delete file="${project::get-base-directory()}\bin\${msplatform_target}\${msbuild_target}\nunit.framework.dll" />
    
    <!-- bundle up gamesmanager dependancies so the gamesmanager can update all dlls while running -->
    <exec program="${ilmerge_exe_path}">
      <arg value="/out:${project::get-base-directory()}\bin\${msplatform_target}\${msbuild_target}\GamesManager.Merged.exe" />
      <arg value="${project::get-base-directory()}\bin\${msplatform_target}\${msbuild_target}\GamesManager.exe" />
      <arg value="${project::get-base-directory()}\bin\${msplatform_target}\${msbuild_target}\GamesManager.Common.dll" />
      <arg value="${project::get-base-directory()}\bin\${msplatform_target}\${msbuild_target}\GamesManager.Controls.dll" />
      <arg value="${project::get-base-directory()}\bin\${msplatform_target}\${msbuild_target}\GamesManager.Model.dll" />
      <arg value="${project::get-base-directory()}\bin\${msplatform_target}\${msbuild_target}\GamesManager.StatisticsService.Contracts.dll" />
      <arg value="${project::get-base-directory()}\bin\${msplatform_target}\${msbuild_target}\IconLib.dll" />
      <arg value="${project::get-base-directory()}\bin\${msplatform_target}\${msbuild_target}\ICSharpCode.SharpZipLib.dll" />
      <arg value="${project::get-base-directory()}\bin\${msplatform_target}\${msbuild_target}\Newtonsoft.Json.Net35.dll" />
      <arg value="${project::get-base-directory()}\bin\${msplatform_target}\${msbuild_target}\Interop.IWshRuntimeLibrary.dll" />
    </exec>
    <delete file="${project::get-base-directory()}\bin\${msplatform_target}\${msbuild_target}\GamesManager.exe" />
    <copy file="${project::get-base-directory()}\bin\${msplatform_target}\${msbuild_target}\GamesManager.Merged.exe" tofile="${project::get-base-directory()}\bin\${msplatform_target}\${msbuild_target}\GamesManager.exe" />
    <delete file="${project::get-base-directory()}\bin\${msplatform_target}\${msbuild_target}\GamesManager.Merged.exe" />

    <!-- bundle up gamesmanager framework updater dependancies -->
    <exec program="${ilmerge_exe_path}">
      <arg value="/out:${project::get-base-directory()}\bin\${msplatform_target}\${msbuild_target}\GamesManager.FrameworkUpdater.Merged.exe" />
      <arg value="${project::get-base-directory()}\bin\${msplatform_target}\${msbuild_target}\GamesManager.FrameworkUpdater.exe" />
      <arg value="${project::get-base-directory()}\bin\${msplatform_target}\${msbuild_target}\GamesManager.Common.dll" />
      <arg value="${project::get-base-directory()}\bin\${msplatform_target}\${msbuild_target}\GamesManager.Model.dll" />
    </exec>
    <delete file="${project::get-base-directory()}\bin\${msplatform_target}\${msbuild_target}\GamesManager.FrameworkUpdater.exe" />
    <copy file="${project::get-base-directory()}\bin\${msplatform_target}\${msbuild_target}\GamesManager.FrameworkUpdater.Merged.exe" tofile="${project::get-base-directory()}\bin\${msplatform_target}\${msbuild_target}\GamesManager.FrameworkUpdater.exe" />
    <delete file="${project::get-base-directory()}\bin\${msplatform_target}\${msbuild_target}\GamesManager.FrameworkUpdater.Merged.exe" />

    <!-- remove individual assemblies -->
    <delete file="${project::get-base-directory()}\bin\${msplatform_target}\${msbuild_target}\GamesManager.Common.dll" />
    <delete file="${project::get-base-directory()}\bin\${msplatform_target}\${msbuild_target}\GamesManager.Controls.dll" />
    <delete file="${project::get-base-directory()}\bin\${msplatform_target}\${msbuild_target}\GamesManager.Model.dll" />
    <delete file="${project::get-base-directory()}\bin\${msplatform_target}\${msbuild_target}\GamesManager.StatisticsService.Contracts.dll" />
    <delete file="${project::get-base-directory()}\bin\${msplatform_target}\${msbuild_target}\IconLib.dll" />
    <delete file="${project::get-base-directory()}\bin\${msplatform_target}\${msbuild_target}\ICSharpCode.SharpZipLib.dll" />
    <delete file="${project::get-base-directory()}\bin\${msplatform_target}\${msbuild_target}\Newtonsoft.Json.Net35.dll" />
    <delete file="${project::get-base-directory()}\bin\${msplatform_target}\${msbuild_target}\Interop.IWshRuntimeLibrary.dll" />
    
    <!-- create the main distribution file which will be put on the auto update site -->
    <mkdir dir="Package" />
    <mkdir dir="Package/Distro" />
    <copy todir="Package/Distro">
      <fileset basedir="${project::get-base-directory()}\bin\${msplatform_target}\${msbuild_target}">
        <exclude name=".svn" />
        <exclude name="*.exp"/>
        <exclude name="*.lib"/>
        <exclude name="*.pdb"/>
        <exclude name="**/game/**" />
        <exclude name="**/user/**" />
        <include name="**/*.*" />
      </fileset>
    </copy>
    <exec program="${sevenzip_path}" failonerror="false" workingdir="${project::get-base-directory()}\Package">
      <arg value="a" />
      <arg value="-r" />
      <arg value="-mx7" />
      <arg value="-tzip" />
      <arg value="MGDF_${buildnumber}.zip" />
      <arg value="${project::get-base-directory()}\Package\Distro\*" />
    </exec>

    <!-- generate the latest.json file for use by other games -->
    <generateupdatescript output="${project::get-base-directory()}\Package\latest.json"
                          version="${buildnumber}" 
                          url="http://s3.amazonaws.com/matchstickframework.org/MGDF_${buildnumber}.zip" 
                          file="${project::get-base-directory()}\Package\MGDF_${buildnumber}.zip" />
    
    <!-- copy debugging symbols + binaries to the package directory so that we can debug minidumps later -->
    <mkdir dir="Package/Symbols" />
    <copy todir="Package/Symbols">
      <fileset basedir="${project::get-base-directory()}\bin\${msplatform_target}\${msbuild_target}">
        <include name="*.pdb" />
        <include name="*.dll" />
        <include name="*.exe" />
      </fileset>
    </copy>
    <copy todir="Package/Symbols">
      <fileset basedir="..\vendor\lib\${msplatform_target}\${msbuild_target}">
        <include name="*.pdb" />
        <include name="*.dll" />
        <include name="*.exe" />
      </fileset>
    </copy>
    
    <mkdir dir="Package/SDK" />

    <mkdir dir="Package/SDK/Prereqs" />
    <copy todir="Package/SDK/Prereqs">
      <fileset basedir="..\Installers">
        <include name="**/dxredist/**" />
        <include name="vcredist_x86.exe" />
        <include name="DotNetFx35ClientSetup.exe" />
      </fileset>
    </copy>
    
    <!-- copy distro to SDK-->
    <copy file="Package/MGDF_${buildnumber}.zip" todir="Package/SDK" overwrite="true"/>
    <copy file="Package/latest.json" todir="Package/SDK" overwrite="true"/>


    <!-- copy MGDF headers to SDK dir-->
    <mkdir dir="Package/SDK/Include" />
    <copy todir="Package/SDK/Include">
      <fileset basedir="include">
        <exclude name=".svn" />
        <include name="**/*.*" />
      </fileset>
    </copy>  
    
    <mkdir dir="Package/SDK/Bin" />
    
    <!-- ilmerge and copy packagegen to SDK bin dir -->
    <exec program="${ilmerge_exe_path}">
      <arg value="/out:Package\SDK\Bin\PackageGen.exe" />
      <arg value="Src\GamesManager\GamesManager.PackageGen\bin\${msplatform_target}\${msbuild_target}\GamesManager.PackageGen.exe" />
      <arg value="Src\GamesManager\GamesManager.PackageGen\bin\${msplatform_target}\${msbuild_target}\GamesManager.Common.dll" />
      <arg value="Src\GamesManager\GamesManager.PackageGen\bin\${msplatform_target}\${msbuild_target}\GamesManager.Model.dll" />
      <arg value="Src\GamesManager\GamesManager.PackageGen\bin\${msplatform_target}\${msbuild_target}\GamesManager.StatisticsService.Contracts.dll" />
      <arg value="Src\GamesManager\GamesManager.PackageGen\bin\${msplatform_target}\${msbuild_target}\IconLib.dll" />
      <arg value="Src\GamesManager\GamesManager.PackageGen\bin\${msplatform_target}\${msbuild_target}\ICSharpCode.SharpZipLib.dll" />
      <arg value="Src\GamesManager\GamesManager.PackageGen\bin\${msplatform_target}\${msbuild_target}\Interop.IWshRuntimeLibrary.dll" />
      <arg value="Src\GamesManager\GamesManager.PackageGen\bin\${msplatform_target}\${msbuild_target}\Newtonsoft.Json.Net35.dll" />
    </exec>
    <copy file="Src\GamesManager\GamesManager.PackageGen\bin\${msplatform_target}\${msbuild_target}\GamesManager.PackageGen.exe.config" tofile="Package\SDK\Bin\PackageGen.exe.config" overwrite="true"/>

    <!-- copy docs to SDK/Documentation -->
    <mkdir dir="Package/SDK/Documentation" />
    <copy todir="Package/SDK/Documentation">
      <fileset basedir="documentation">
        <exclude name=".svn" />
        <include name="**/*.*" />
      </fileset>
    </copy>

    <!-- copy SDK samples -->
    <mkdir dir="Package/SDK/Src" />
    <mkdir dir="Package/SDK/Src/Samples" />
    <copy todir="Package/SDK/Src/Samples">
      <fileset basedir="Src\Samples">
        <exclude name="**/bin/**" />
        <exclude name=".lib" />
        <exclude name=".svn" />
        <exclude name=".sdf" />
        <exclude name=".suo" />
        <exclude name=".user" />
        <include name="**/*.*" />
      </fileset>
    </copy>
    
    <mkdir dir="Package/SDK/Server" />

    <!-- add statistics service to the SDK package -->
    <mkdir dir="Package/SDK/Server/StatisticsService" />
    <echo message="Packaging MGDF Statistics Service"/>
    <exec program="${aspnetcompiler_exe_path}">
      <arg value="/v" />
      <arg value="/" />
      <arg value="/p" />
      <arg value="Src\GamesManager\GamesManager.StatisticsService" />
      <arg value="/u" />
      <arg value="/f" />
      <arg value="Package/SDK/Server/StatisticsService" />
    </exec>
    <copy file="Src\GamesManager\GamesManager.StatisticsService.Model\schema.sql" todir="Package/SDK/Server/StatisticsService" overwrite="true"/>
    <copy file="Src\GamesManager\GamesManager.StatisticsService\Global.asax" todir="Package/SDK/Server/StatisticsService" overwrite="true"/>
    <delete>
      <fileset basedir="Package/SDK/Server/StatisticsService">
        <include name="GamesManager.StatisticsService.csproj"/>
        <include name="GamesManager.StatisticsService.csproj.user"/>
        <include name="PrecompiledApp.config"/>
        <include name="bin\App_global.asax.*"/>
      </fileset>
    </delete>
    <delete dir="Package\SDK\Server\StatisticsService\obj"/>
    <delete dir="Package\SDK\Server\StatisticsService\Log"/>
    
    <!-- zip up the SDK-->
    <exec program="${sevenzip_path}" failonerror="false" workingdir="${project::get-base-directory()}\Package">
      <arg value="a" />
      <arg value="-r" />
      <arg value="-mx7" />
      <arg value="-tzip" />
      <arg value="MGDF_${buildnumber}_SDK.zip" />
      <arg value="${project::get-base-directory()}\Package\SDK" />
    </exec>

    <delete dir="Package\SDK"/>
</target>
</project>