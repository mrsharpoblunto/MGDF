{"Classes":[{"InheritsFromTypeRefIds":[],"InheritsFromUnreferencedType":["IUnknown"],"Id":"IMGDFArchiveHandler","Name":"IMGDFArchiveHandler","Description":"Provides an interface for creating portions of the vfs tree from archive files","Members":[{"MemberType":1,"Id":"TestPathSegment","Name":"TestPathSegment","Description":"Test if the logical path segment looks like it could be an archive file","ReturnType":"BOOL","ReturnDescription":"TRUE if the segment looks like it could be an archive file","ReturnTypeRefId":null,"Args":[{"Name":"segment","Type":"const MGDFArchivePathSegment *","TypeRefId":"MGDFArchivePathSegment","Description":"Part of the logical path to test"}],"Const":false},{"MemberType":1,"Id":"MapArchive","Name":"MapArchive","Description":"If the logicalPath points to a file that is an archive, this function will\n  map the archive and return the file inside the archive at the logical path","ReturnType":"BOOL","ReturnDescription":"TRUE if the fullPath could be mapped to an archive, otherwise FALSE","ReturnTypeRefId":null,"Args":[{"Name":"rootPath","Type":"const wchar_t *","TypeRefId":null,"Description":"The physical path on disk to the vfs root"},{"Name":"archivePath","Type":"const wchar_t *","TypeRefId":null,"Description":"The physical path on disk to the archive file"},{"Name":"logicalPathSegments","Type":"const MGDFArchivePathSegment *","TypeRefId":"MGDFArchivePathSegment","Description":"The logical path to the file within the archive"},{"Name":"logicalPathSegmentCount","Type":"UINT64","TypeRefId":null,"Description":"The number of segments in the logical path"},{"Name":"handlers","Type":"IMGDFArchiveHandler **","TypeRefId":"IMGDFArchiveHandler","Description":"An array of all registered archive handlers"},{"Name":"handlerCount","Type":"UINT64","TypeRefId":null,"Description":"The number of registered archive handlers"},{"Name":"parent","Type":"IMGDFReadOnlyFile *","TypeRefId":"IMGDFReadOnlyFile","Description":"The parent file in the vfs tree"},{"Name":"file","Type":"IMGDFReadOnlyFile **","TypeRefId":"IMGDFReadOnlyFile","Description":"Pointer to the file in the mapped vfs subtree"}],"Const":false}]},{"InheritsFromTypeRefIds":["IMGDFLogger"],"InheritsFromUnreferencedType":[],"Id":"IMGDFCommonHost","Name":"IMGDFCommonHost","Description":"Provides an entrypoint for a module to interact with the MGDF host. Methods in\nthis interface are safe to be used from any thread","Members":[{"MemberType":1,"Id":"FatalError","Name":"FatalError","Description":"This method should be invoked when a fatal error is encountered","ReturnType":"void","ReturnDescription":null,"ReturnTypeRefId":null,"Args":[{"Name":"sender","Type":"const small *","TypeRefId":null,"Description":"The location or component the error occurred in"},{"Name":"message","Type":"const small *","TypeRefId":null,"Description":"Details of the fatal error"}],"Const":false},{"MemberType":1,"Id":"GetRenderSettings","Name":"GetRenderSettings","Description":"Get the render settings manager","ReturnType":"void","ReturnDescription":null,"ReturnTypeRefId":null,"Args":[{"Name":"settings","Type":"IMGDFRenderSettingsManager * *","TypeRefId":"IMGDFRenderSettingsManager","Description":"The render settings manager"}],"Const":false},{"MemberType":1,"Id":"GetTimer","Name":"GetTimer","Description":"Get the host timer","ReturnType":"void","ReturnDescription":null,"ReturnTypeRefId":null,"Args":[{"Name":"timer","Type":"IMGDFTimer * *","TypeRefId":"IMGDFTimer","Description":"Pointer to the host timer"}],"Const":false},{"MemberType":1,"Id":"GetMGDFVersion","Name":"GetMGDFVersion","Description":"Gets the current version of the framework","ReturnType":"const MGDFVersion *","ReturnDescription":"The current version of the framework","ReturnTypeRefId":"MGDFVersion","Args":[],"Const":false},{"MemberType":1,"Id":"GetVFS","Name":"GetVFS","Description":"Get the readonly content filesystem","ReturnType":"void","ReturnDescription":null,"ReturnTypeRefId":null,"Args":[{"Name":"vfs","Type":"IMGDFReadOnlyVirtualFileSystem * *","TypeRefId":"IMGDFReadOnlyVirtualFileSystem","Description":"The readonly filesystem"}],"Const":false},{"MemberType":1,"Id":"GetWorkingVFS","Name":"GetWorkingVFS","Description":"Get the read/write working folder","ReturnType":"void","ReturnDescription":null,"ReturnTypeRefId":null,"Args":[{"Name":"vfs","Type":"IMGDFWriteableVirtualFileSystem * *","TypeRefId":"IMGDFWriteableVirtualFileSystem","Description":"The writeable filesystem"}],"Const":false},{"MemberType":1,"Id":"GetD3DDevice","Name":"GetD3DDevice","Description":"Get the direct3d device object from the host","ReturnType":"void","ReturnDescription":null,"ReturnTypeRefId":null,"Args":[{"Name":"device","Type":"ID3D11Device * *","TypeRefId":null,"Description":"The direct3d device object from the host"}],"Const":false},{"MemberType":1,"Id":"GetD2DDevice","Name":"GetD2DDevice","Description":"Get the direct2d device object from the host","ReturnType":"void","ReturnDescription":null,"ReturnTypeRefId":null,"Args":[{"Name":"device","Type":"ID2D1Device * *","TypeRefId":"ID2D1Device","Description":"The direct2d device object from the host"}],"Const":false},{"MemberType":1,"Id":"GetDebug","Name":"GetDebug","Description":"Get the onscreen debug overlay interface","ReturnType":"void","ReturnDescription":null,"ReturnTypeRefId":null,"Args":[{"Name":"debug","Type":"IMGDFDebug * *","TypeRefId":"IMGDFDebug","Description":"Pointer to a debug overlay object"}],"Const":false},{"MemberType":1,"Id":"CreateCPUCounter","Name":"CreateCPUCounter","Description":"Create a performance counter for profiling CPU time taken. When no longer\n   used it should be released","ReturnType":"HRESULT","ReturnDescription":"S_OK if the counter could be created, otherwise an error code is returned","ReturnTypeRefId":null,"Args":[{"Name":"metric","Type":"IMGDFMetric *","TypeRefId":"IMGDFMetric","Description":"The metric the counter should update"},{"Name":"counter","Type":"IMGDFPerformanceCounter * *","TypeRefId":"IMGDFPerformanceCounter","Description":"Points to the created counter"}],"Const":false},{"MemberType":1,"Id":"CreateCounterMetric","Name":"CreateCounterMetric","Description":"Create or get an existing metric for a monotonically increasing counter","ReturnType":"HRESULT","ReturnDescription":"S_OK if the metric could be created, otherwise an error code is returned","ReturnTypeRefId":null,"Args":[{"Name":"name","Type":"const small *","TypeRefId":null,"Description":"The name of the metric"},{"Name":"description","Type":"const small *","TypeRefId":null,"Description":"A description of what the metric is measuring"},{"Name":"metric","Type":"IMGDFMetric **","TypeRefId":"IMGDFMetric","Description":"Points to the created metric"}],"Const":false},{"MemberType":1,"Id":"CreateGaugeMetric","Name":"CreateGaugeMetric","Description":"Create or get an existing metric that can go up and down over time","ReturnType":"HRESULT","ReturnDescription":"S_OK if the metric could be created, otherwise an error code is returned","ReturnTypeRefId":null,"Args":[{"Name":"name","Type":"const small *","TypeRefId":null,"Description":"The name of the metric"},{"Name":"description","Type":"const small *","TypeRefId":null,"Description":"A description of what the metric is measuring"},{"Name":"metric","Type":"IMGDFMetric **","TypeRefId":"IMGDFMetric","Description":"Points to the created metric"}],"Const":false},{"MemberType":1,"Id":"CreateHistogramMetric","Name":"CreateHistogramMetric","Description":"Create or get an existing metric that can go up and down over time","ReturnType":"HRESULT","ReturnDescription":"S_OK if the metric could be created, otherwise an error code is returned","ReturnTypeRefId":null,"Args":[{"Name":"name","Type":"const small *","TypeRefId":null,"Description":"The name of the metric"},{"Name":"description","Type":"const small *","TypeRefId":null,"Description":"A description of what the metric is measuring"},{"Name":"buckets","Type":"const double *","TypeRefId":null,"Description":"Pointer to an array of buckets used in the histogram"},{"Name":"bucketCount","Type":"const UINT64","TypeRefId":null,"Description":"The length of the buckets array parameter"},{"Name":"metric","Type":"IMGDFMetric **","TypeRefId":"IMGDFMetric","Description":"Points to the created metric"}],"Const":false},{"MemberType":1,"Id":"QueueDeviceReset","Name":"QueueDeviceReset","Description":"After a module receives an RTOnBeforeDeviceReset callback, calling this\n  tells the host that all references to the previous D3D device have been\n  cleaned up and that the device can be safely reset","ReturnType":"void","ReturnDescription":null,"ReturnTypeRefId":null,"Args":[],"Const":false}]},{"InheritsFromTypeRefIds":[],"InheritsFromUnreferencedType":["IUnknown"],"Id":"IMGDFDebug","Name":"IMGDFDebug","Description":"Controls the data displayed in the MGDF debug overlay sheet\n(press ALT-F12 to see in game)","Members":[{"MemberType":1,"Id":"Set","Name":"Set","Description":"Set some data to display in the overlay","ReturnType":"void","ReturnDescription":null,"ReturnTypeRefId":null,"Args":[{"Name":"section","Type":"const small *","TypeRefId":null,"Description":"The section to display the key:value in"},{"Name":"key","Type":"const small *","TypeRefId":null,"Description":"The key to display"},{"Name":"value","Type":"const small *","TypeRefId":null,"Description":"The value to display"}],"Const":false},{"MemberType":1,"Id":"Clear","Name":"Clear","Description":"Clear some data out of the overlay","ReturnType":"void","ReturnDescription":null,"ReturnTypeRefId":null,"Args":[{"Name":"section","Type":"const small *","TypeRefId":null,"Description":"To clear the key from"},{"Name":"key","Type":"const small *","TypeRefId":null,"Description":"The key to clear (if null, clears all keys in the section)"}],"Const":false},{"MemberType":1,"Id":"IsShown","Name":"IsShown","Description":"Whether the debug overlay is currently visible","ReturnType":"BOOL","ReturnDescription":"Whether the debug overlay is currently visible","ReturnTypeRefId":null,"Args":[],"Const":false},{"MemberType":1,"Id":"ToggleShown","Name":"ToggleShown","Description":"Toggle the visibility status of the overlay","ReturnType":"void","ReturnDescription":null,"ReturnTypeRefId":null,"Args":[],"Const":false}]},{"InheritsFromTypeRefIds":[],"InheritsFromUnreferencedType":["IUnknown"],"Id":"IMGDFFile","Name":"IMGDFFile","Description":"Provides a base interface for filesystem access that is common across the\nreadonly virtual filesystem and writeable save and working directories.","Members":[{"MemberType":1,"Id":"GetChildCount","Name":"GetChildCount","Description":"Get how many children this file has","ReturnType":"UINT64","ReturnDescription":"How many children this file has","ReturnTypeRefId":null,"Args":[],"Const":false},{"MemberType":1,"Id":"IsFolder","Name":"IsFolder","Description":"Determines if the file entity is a folder","ReturnType":"BOOL","ReturnDescription":"True if the file is a folder","ReturnTypeRefId":null,"Args":[],"Const":false},{"MemberType":1,"Id":"IsOpen","Name":"IsOpen","Description":"Determines if the file has an open reader","ReturnType":"BOOL","ReturnDescription":"True if the file has an open reader","ReturnTypeRefId":null,"Args":[],"Const":false},{"MemberType":1,"Id":"Open","Name":"Open","Description":"Attempt to open the file for reading. Only one fileReader can be open for a\n  file at any time. Because of this, you should ensure that any reader is closed\n  after it is no longer needed.","ReturnType":"HRESULT","ReturnDescription":"S_OK if the reader was created, E_FAIL if the file could not be opened or\n  E_ACCESSDENIED if it was already open","ReturnTypeRefId":null,"Args":[{"Name":"reader","Type":"IMGDFFileReader * *","TypeRefId":"IMGDFFileReader","Description":"Pointer to any reader that is created"}],"Const":false},{"MemberType":1,"Id":"GetLastWriteTime","Name":"GetLastWriteTime","Description":"Find the last write time of the file","ReturnType":"UINT64","ReturnDescription":"A timestamp indicating the last write time","ReturnTypeRefId":null,"Args":[],"Const":false},{"MemberType":1,"Id":"GetPhysicalName","Name":"GetPhysicalName","Description":"Gets the physical name of this file on disk","ReturnType":"HRESULT","ReturnDescription":"S_OK if the buffer was the correct length or was NULL, otherwise E_NOT_SUFFICIENT_BUFFER","ReturnTypeRefId":null,"Args":[{"Name":"name","Type":"wchar_t *","TypeRefId":null,"Description":"Buffer to store the file name"},{"Name":"length","Type":"UINT64 *","TypeRefId":null,"Description":"The length of the buffer provided to store the value above. Will be set to the length required"}],"Const":false},{"MemberType":1,"Id":"GetPhysicalPath","Name":"GetPhysicalPath","Description":"Gets the physical path to this file","ReturnType":"HRESULT","ReturnDescription":"S_OK if the buffer was the correct length or was NULL, otherwise E_NOT_SUFFICIENT_BUFFER","ReturnTypeRefId":null,"Args":[{"Name":"name","Type":"wchar_t *","TypeRefId":null,"Description":"Buffer to store the file path"},{"Name":"length","Type":"UINT64 *","TypeRefId":null,"Description":"The length of the buffer provided to store the value above. Will be set to the length required"}],"Const":false},{"MemberType":1,"Id":"GetLogicalName","Name":"GetLogicalName","Description":"Gets the logical name of this file","ReturnType":"HRESULT","ReturnDescription":"S_OK if the buffer was the correct length or was NULL, otherwise E_NOT_SUFFICIENT_BUFFER","ReturnTypeRefId":null,"Args":[{"Name":"name","Type":"wchar_t *","TypeRefId":null,"Description":"Buffer to store the file name"},{"Name":"length","Type":"UINT64 *","TypeRefId":null,"Description":"The length of the buffer provided to store the value above. Will be set to the length required"}],"Const":false},{"MemberType":1,"Id":"GetLogicalPath","Name":"GetLogicalPath","Description":"Gets the logical path to this file","ReturnType":"HRESULT","ReturnDescription":"S_OK if the buffer was the correct length or was NULL, otherwise E_NOT_SUFFICIENT_BUFFER","ReturnTypeRefId":null,"Args":[{"Name":"name","Type":"wchar_t *","TypeRefId":null,"Description":"Buffer to store the file name"},{"Name":"length","Type":"UINT64 *","TypeRefId":null,"Description":"The length of the buffer provided to store the value above. Will be set to the length required"}],"Const":false}]},{"InheritsFromTypeRefIds":[],"InheritsFromUnreferencedType":["IUnknown"],"Id":"IMGDFFileReader","Name":"IMGDFFileReader","Description":"Provides an interface for reading data from a file","Members":[{"MemberType":1,"Id":"Read","Name":"Read","Description":"Reads the specified number of bytes into the buffer","ReturnType":"UINT32","ReturnDescription":"The amount of bytes actually read into the buffer","ReturnTypeRefId":null,"Args":[{"Name":"buffer","Type":"void *","TypeRefId":null,"Description":"A buffer to store the read data"},{"Name":"length","Type":"UINT32","TypeRefId":null,"Description":"The max amount of data that can be read into the buffer"}],"Const":false},{"MemberType":1,"Id":"SetPosition","Name":"SetPosition","Description":"Sets the read position of the file in bytes","ReturnType":"void","ReturnDescription":null,"ReturnTypeRefId":null,"Args":[{"Name":"pos","Type":"INT64","TypeRefId":null,"Description":"The read position of the file in bytes"}],"Const":false},{"MemberType":1,"Id":"GetPosition","Name":"GetPosition","Description":"Get the current read position of the file in bytes","ReturnType":"INT64","ReturnDescription":"The read position in the file","ReturnTypeRefId":null,"Args":[],"Const":false},{"MemberType":1,"Id":"EndOfFile","Name":"EndOfFile","Description":"Determines whether the file read position has reached the end of the file","ReturnType":"BOOL","ReturnDescription":"True if the read position is past the end of the file","ReturnTypeRefId":null,"Args":[],"Const":false},{"MemberType":1,"Id":"GetSize","Name":"GetSize","Description":"Get the size of the file in bytes","ReturnType":"INT64","ReturnDescription":"The filesize in bytes (for compressed archives this value is the\n  uncompressed size)","ReturnTypeRefId":null,"Args":[],"Const":false}]},{"InheritsFromTypeRefIds":[],"InheritsFromUnreferencedType":["IUnknown"],"Id":"IMGDFFileWriter","Name":"IMGDFFileWriter","Description":"Provides an interface for writing data to a file","Members":[{"MemberType":1,"Id":"Write","Name":"Write","Description":"Writes the specified number of bytes into the buffer","ReturnType":"UINT32","ReturnDescription":"The amount of bytes actually written to the file","ReturnTypeRefId":null,"Args":[{"Name":"buffer","Type":"void *","TypeRefId":null,"Description":"A buffer to store the write data"},{"Name":"length","Type":"UINT32","TypeRefId":null,"Description":"The max amount of data to write to the file"}],"Const":false},{"MemberType":1,"Id":"SetPosition","Name":"SetPosition","Description":"Sets the write position of the file in bytes","ReturnType":"void","ReturnDescription":null,"ReturnTypeRefId":null,"Args":[{"Name":"pos","Type":"INT64","TypeRefId":null,"Description":"The write position of the file in bytes"}],"Const":false},{"MemberType":1,"Id":"GetPosition","Name":"GetPosition","Description":"Get the current write position of the file in bytes","ReturnType":"INT64","ReturnDescription":"The write position in the file","ReturnTypeRefId":null,"Args":[],"Const":false}]},{"InheritsFromTypeRefIds":[],"InheritsFromUnreferencedType":["IUnknown"],"Id":"IMGDFGame","Name":"IMGDFGame","Description":"Provides information regarding the current game being run\nand the preferences associated with that game","Members":[{"MemberType":1,"Id":"GetName","Name":"GetName","Description":"Get the name of the current game running","ReturnType":"const small *","ReturnDescription":"The name of the current game running","ReturnTypeRefId":null,"Args":[],"Const":false},{"MemberType":1,"Id":"GetUid","Name":"GetUid","Description":"Get the uid of the current game running","ReturnType":"const small *","ReturnDescription":"The name of the current game running","ReturnTypeRefId":null,"Args":[],"Const":false},{"MemberType":1,"Id":"GetVersion","Name":"GetVersion","Description":"Get the version of the current game running","ReturnType":"void","ReturnDescription":null,"ReturnTypeRefId":null,"Args":[{"Name":"version","Type":"MGDFVersion *","TypeRefId":"MGDFVersion","Description":"The version of the current game running"}],"Const":false},{"MemberType":1,"Id":"HasPreference","Name":"HasPreference","Description":"Determine if the game has a preference for the given key","ReturnType":"BOOL","ReturnDescription":"True if the key has an associated value","ReturnTypeRefId":null,"Args":[{"Name":"name","Type":"const small *","TypeRefId":null,"Description":"The preference name"}],"Const":false},{"MemberType":1,"Id":"GetPreference","Name":"GetPreference","Description":"Determine if the game has a preference for the given key and return its value.\n  Preferences can be defined in a games game.json file, or new ones can be\n  added/overwritten by calling SetPreference","ReturnType":"HRESULT","ReturnDescription":"S_OK if the value was found and the buffer was the correct length or was NULL, otherwise E_NOT_SUFFICIENT_BUFFER","ReturnTypeRefId":null,"Args":[{"Name":"name","Type":"const small *","TypeRefId":null,"Description":"The preference name"},{"Name":"value","Type":"small *","TypeRefId":null,"Description":"Buffer to store the value associated with the key or nullptr if there is no such key"},{"Name":"length","Type":"UINT64 *","TypeRefId":null,"Description":"The length of the buffer provided to store the value above. Will be set to the length required"}],"Const":false},{"MemberType":1,"Id":"SetPreference","Name":"SetPreference","Description":"Change the value of a preference","ReturnType":"void","ReturnDescription":null,"ReturnTypeRefId":null,"Args":[{"Name":"name","Type":"const small *","TypeRefId":null,"Description":"The preference name"},{"Name":"value","Type":"const small *","TypeRefId":null,"Description":"The new preference value"}],"Const":false},{"MemberType":1,"Id":"SetPreferences","Name":"SetPreferences","Description":"Sets a number of preferences in one go. Used for applying system render &\n  sound settings","ReturnType":"void","ReturnDescription":null,"ReturnTypeRefId":null,"Args":[{"Name":"preferences","Type":"IMGDFPreferenceSet *","TypeRefId":"IMGDFPreferenceSet","Description":"A set of preferences"}],"Const":false},{"MemberType":1,"Id":"SavePreferences","Name":"SavePreferences","Description":"Save the current preferences list","ReturnType":"void","ReturnDescription":null,"ReturnTypeRefId":null,"Args":[],"Const":false},{"MemberType":1,"Id":"ResetPreferences","Name":"ResetPreferences","Description":"Reload all preferences to their user independent default values","ReturnType":"void","ReturnDescription":null,"ReturnTypeRefId":null,"Args":[],"Const":false}]},{"InheritsFromTypeRefIds":[],"InheritsFromUnreferencedType":["IUnknown"],"Id":"IMGDFGamepad","Name":"IMGDFGamepad","Description":"Provides the ability to query the state of and control other properties of an\nXInput compatible gamepad connected to the PC","Members":[{"MemberType":1,"Id":"IsConnected","Name":"IsConnected","Description":"Determines if a controller is connected","ReturnType":"BOOL","ReturnDescription":"True if if a controller is connected","ReturnTypeRefId":null,"Args":[],"Const":false},{"MemberType":1,"Id":"IsButtonDown","Name":"IsButtonDown","Description":"Determines if a button is pressed","ReturnType":"BOOL","ReturnDescription":"True if the button is being held down","ReturnTypeRefId":null,"Args":[{"Name":"button","Type":"MGDFGamepadButton","TypeRefId":"MGDFGamepadButton","Description":"The gamepad button code representing the desired button"}],"Const":false},{"MemberType":1,"Id":"IsButtonUp","Name":"IsButtonUp","Description":"Determines if a button is NOT pressed","ReturnType":"BOOL","ReturnDescription":"True if the button is not being pressed","ReturnTypeRefId":null,"Args":[{"Name":"button","Type":"MGDFGamepadButton","TypeRefId":"MGDFGamepadButton","Description":"The gamepad button code representing the desired button"}],"Const":false},{"MemberType":1,"Id":"IsButtonPress","Name":"IsButtonPress","Description":"Determines if a button press has occured","ReturnType":"BOOL","ReturnDescription":"True if the button has been pressed (i.e pressed down then released)","ReturnTypeRefId":null,"Args":[{"Name":"button","Type":"MGDFGamepadButton","TypeRefId":"MGDFGamepadButton","Description":"The gamepad button code representing the desired button"}],"Const":false},{"MemberType":1,"Id":"GetLeftTrigger","Name":"GetLeftTrigger","Description":"Returns the state of the controllers left trigger","ReturnType":"UINT8","ReturnDescription":"0 for idle to 255 for fully held","ReturnTypeRefId":null,"Args":[],"Const":false},{"MemberType":1,"Id":"GetRightTrigger","Name":"GetRightTrigger","Description":"Returns the state of the controllers right trigger","ReturnType":"UINT8","ReturnDescription":"0 for idle to 255 for fully held","ReturnTypeRefId":null,"Args":[],"Const":false},{"MemberType":1,"Id":"GetLeftThumbX","Name":"GetLeftThumbX","Description":"Returns the state of the left thumbstick on the X axis","ReturnType":"INT32","ReturnDescription":"-32768 for far left to +32767 for far right","ReturnTypeRefId":null,"Args":[],"Const":false},{"MemberType":1,"Id":"GetLeftThumbY","Name":"GetLeftThumbY","Description":"Returns the state of the left thumbstick on the Y axis","ReturnType":"INT32","ReturnDescription":"-32768 for top to +32767 for bottom","ReturnTypeRefId":null,"Args":[],"Const":false},{"MemberType":1,"Id":"GetRightThumbX","Name":"GetRightThumbX","Description":"Returns the state of the right thumbstick on the X axis","ReturnType":"INT32","ReturnDescription":"-32768 for far left to +32767 for far right","ReturnTypeRefId":null,"Args":[],"Const":false},{"MemberType":1,"Id":"GetRightThumbY","Name":"GetRightThumbY","Description":"Returns the state of the right thumbstick on the Y axis","ReturnType":"INT32","ReturnDescription":"-32768 for top to +32767 for bottom","ReturnTypeRefId":null,"Args":[],"Const":false},{"MemberType":1,"Id":"SetVibrationSpeed","Name":"SetVibrationSpeed","Description":"Sets the vibration intensity in the left and right vibrator motors of the\n  controller, valid values are 0-65535","ReturnType":"void","ReturnDescription":null,"ReturnTypeRefId":null,"Args":[{"Name":"left","Type":"UINT16","TypeRefId":null,"Description":"The intensity of the left vibrator motor"},{"Name":"right","Type":"UINT16","TypeRefId":null,"Description":"The intensity of the right vibrator motor"}],"Const":false}]},{"InheritsFromTypeRefIds":[],"InheritsFromUnreferencedType":["IUnknown"],"Id":"IMGDFGameState","Name":"IMGDFGameState","Description":"A saved game state and its associated metadata","Members":[{"MemberType":1,"Id":"GetMetadata","Name":"GetMetadata","Description":"Gets the value of a metadata key","ReturnType":"HRESULT","ReturnDescription":"S_OK if the value was found and the buffer was the correct length or was NULL, otherwise E_NOT_SUFFICIENT_BUFFER","ReturnTypeRefId":null,"Args":[{"Name":"key","Type":"const small *","TypeRefId":null,"Description":"The name of the metadata key"},{"Name":"value","Type":"small *","TypeRefId":null,"Description":"Buffer to store the value associated with the key or nullptr if there is no such key"},{"Name":"length","Type":"UINT64 *","TypeRefId":null,"Description":"The length of the buffer provided to store the value above. Will be set to the length required"}],"Const":false},{"MemberType":1,"Id":"SetMetadata","Name":"SetMetadata","Description":"Sets the value of a metadata key","ReturnType":"HRESULT","ReturnDescription":"S_OK if the value could be stored","ReturnTypeRefId":null,"Args":[{"Name":"key","Type":"const small *","TypeRefId":null,"Description":"The name of the metadata key"},{"Name":"value","Type":"const small *","TypeRefId":null,"Description":"The value associated with the key"}],"Const":false},{"MemberType":1,"Id":"IsNew","Name":"IsNew","Description":"Is this a new game state with no persisted data that has been created from a\n  recent call to CreateGameState","ReturnType":"BOOL","ReturnDescription":"True if the game state is new with no persisted data","ReturnTypeRefId":null,"Args":[],"Const":false},{"MemberType":1,"Id":"GetVersion","Name":"GetVersion","Description":"Get the version of the Module that saved this game state","ReturnType":"void","ReturnDescription":null,"ReturnTypeRefId":null,"Args":[{"Name":"version","Type":"MGDFVersion *","TypeRefId":"MGDFVersion","Description":"The version of the Module that saved this game state"}],"Const":false},{"MemberType":1,"Id":"GetVFS","Name":"GetVFS","Description":"Get the readonly virtual filesystem for the game states previously persisted\n  data.","ReturnType":"HRESULT","ReturnDescription":"S_OK if the virtual filesystem could be mounted, will fail if the game state is new","ReturnTypeRefId":null,"Args":[{"Name":"vfs","Type":"IMGDFReadOnlyVirtualFileSystem * *","TypeRefId":"IMGDFReadOnlyVirtualFileSystem","Description":"The virtual filesystem for accessing the game states data"}],"Const":false},{"MemberType":1,"Id":"BeginSave","Name":"BeginSave","Description":"Begins the process of saving the gamestate data. Once finished saving all\n  data to the VFS\n  instance returned. Modules should release the VFS to commit the save","ReturnType":"HRESULT","ReturnDescription":"S_OK if the VFS could be mounted","ReturnTypeRefId":null,"Args":[{"Name":"pending","Type":"IMGDFWriteableVirtualFileSystem * *","TypeRefId":"IMGDFWriteableVirtualFileSystem","Description":"A VFS mounted in a temporary save directory, once released any data in this\n  directory will be copied into the permanent game state data directory"}],"Const":false}]},{"InheritsFromTypeRefIds":[],"InheritsFromUnreferencedType":["IUnknown"],"Id":"IMGDFHttpClientRequest","Name":"IMGDFHttpClientRequest","Description":"An interface for sending an HTTP request","Members":[{"MemberType":1,"Id":"SetRequestHeader","Name":"SetRequestHeader","Description":"Set the value of an HTTP header on the request","ReturnType":"IMGDFHttpClientRequest *","ReturnDescription":"This request object for chaining","ReturnTypeRefId":"IMGDFHttpClientRequest","Args":[{"Name":"name","Type":"const small *","TypeRefId":null,"Description":"The name of the header"},{"Name":"value","Type":"const small *","TypeRefId":null,"Description":"The value of the header"}],"Const":false},{"MemberType":1,"Id":"SetRequestMethod","Name":"SetRequestMethod","Description":"Set the HTTP method to use for the request","ReturnType":"IMGDFHttpClientRequest *","ReturnDescription":"This request object for chaining","ReturnTypeRefId":"IMGDFHttpClientRequest","Args":[{"Name":"method","Type":"const small *","TypeRefId":null,"Description":"The HTTP method to use for the request, one of the standard HTTP verbs (GET, POST, PUT, DELETE, etc)"}],"Const":false},{"MemberType":1,"Id":"SetRequestBody","Name":"SetRequestBody","Description":"Set the body of the request. This method copies the body data into the request","ReturnType":"IMGDFHttpClientRequest *","ReturnDescription":"This request object for chaining","ReturnTypeRefId":"IMGDFHttpClientRequest","Args":[{"Name":"body","Type":"const small *","TypeRefId":null,"Description":"The body of the request"},{"Name":"bodyLength","Type":"UINT64","TypeRefId":null,"Description":"The length of the body"}],"Const":false},{"MemberType":1,"Id":"CancelRequest","Name":"CancelRequest","Description":"Cancels a pending request. Causes any calls to GetResponse to return true with a response with a code of -1, and a 'Cancelled' error message","ReturnType":"void","ReturnDescription":null,"ReturnTypeRefId":null,"Args":[],"Const":false},{"MemberType":1,"Id":"SendRequest","Name":"SendRequest","Description":"Initiates the request. The request is not actually sent until this method is\n  called","ReturnType":"void *","ReturnDescription":"A unique pointer to the request in the group if the request was sent in a group, otherwise nullptr. This can be\n  used to identify the request in the group when calling GetResponse later","ReturnTypeRefId":null,"Args":[{"Name":"group","Type":"IMGDFHttpClientRequestGroup *","TypeRefId":"IMGDFHttpClientRequestGroup","Description":"An optional group to send the request in"}],"Const":false},{"MemberType":1,"Id":"GetResponse","Name":"GetResponse","Description":"Check if the request has received a response and if so get the response","ReturnType":"BOOL","ReturnDescription":"True if the request has received a response, been cancelled, or failed with an error. If the request is still pending, false is returned","ReturnTypeRefId":null,"Args":[{"Name":"response","Type":"IMGDFHttpClientResponse * *","TypeRefId":"IMGDFHttpClientResponse","Description":"The response to the request"}],"Const":false}]},{"InheritsFromTypeRefIds":[],"InheritsFromUnreferencedType":["IUnknown"],"Id":"IMGDFHttpClientRequestGroup","Name":"IMGDFHttpClientRequestGroup","Description":"An interface for grouping HTTP requests together. This allows multiple requests\nto be checked for completion at once.","Members":[{"MemberType":1,"Id":"GetResponse","Name":"GetResponse","Description":"Call this repeatedly to check if any requests in a group have completed","ReturnType":"void *","ReturnDescription":"The handle of any completed http request, nullptr otherwise","ReturnTypeRefId":null,"Args":[{"Name":"response","Type":"IMGDFHttpClientResponse * *","TypeRefId":"IMGDFHttpClientResponse","Description":"The response to the request"}],"Const":false}]},{"InheritsFromTypeRefIds":[],"InheritsFromUnreferencedType":["IUnknown"],"Id":"IMGDFHttpClientResponse","Name":"IMGDFHttpClientResponse","Description":"An interface for an HTTP Response. The memory returned by all methods are owned by the response and are only valid for the lifetime of the response. If you want to persist these values you should create copies of them.","Members":[{"MemberType":1,"Id":"GetResponseCode","Name":"GetResponseCode","Description":"Get the value of the HTTP response code","ReturnType":"INT32","ReturnDescription":"0 indicates an error making the request\n          -1 indicates the request was cancelled\n          any other value represents the HTTP status code returned from the server","ReturnTypeRefId":null,"Args":[],"Const":false},{"MemberType":1,"Id":"GetResponseHeader","Name":"GetResponseHeader","Description":"Get the value of a header in the response","ReturnType":"HRESULT","ReturnDescription":"S_OK if the buffer was the correct length or was NULL, E_NOT_SET if no header exists, otherwise E_NOT_SUFFICIENT_BUFFER if the buffer size was insufficient","ReturnTypeRefId":null,"Args":[{"Name":"name","Type":"const small *","TypeRefId":null,"Description":"The name of the header"},{"Name":"value","Type":"small *","TypeRefId":null,"Description":"A buffer to store the header value in"},{"Name":"length","Type":"UINT64 *","TypeRefId":null,"Description":"The length of the buffer provided to store the value above. Will be set to the length required"}],"Const":false},{"MemberType":1,"Id":"GetResponseError","Name":"GetResponseError","Description":"If the request failed, get the error message","ReturnType":"HRESULT","ReturnDescription":"S_OK if the buffer was the correct length or was NULL, otherwise E_NOT_SUFFICIENT_BUFFER if the buffer size was insufficient","ReturnTypeRefId":null,"Args":[{"Name":"error","Type":"small *","TypeRefId":null,"Description":"A buffer to store the error message in"},{"Name":"length","Type":"UINT64 *","TypeRefId":null,"Description":"The length of the buffer provided to store the value above. Will be set to the length required"}],"Const":false},{"MemberType":1,"Id":"GetResponseBody","Name":"GetResponseBody","Description":"Get he body of the response. NOTE: this is not necessarily a valid C string\nand may not be null terminated.","ReturnType":"HRESULT","ReturnDescription":"S_OK if the buffer was the correct length or was NULL, otherwise E_NOT_SUFFICIENT_BUFFER if the buffer size was insufficient","ReturnTypeRefId":null,"Args":[{"Name":"body","Type":"small *","TypeRefId":null,"Description":"A buffer to store the response body in"},{"Name":"length","Type":"UINT64 *","TypeRefId":null,"Description":"The length of the buffer provided to store the value above. Will be set to the length required"}],"Const":false}]},{"InheritsFromTypeRefIds":[],"InheritsFromUnreferencedType":["IUnknown"],"Id":"IMGDFHttpServerRequest","Name":"IMGDFHttpServerRequest","Description":"An interface for querying the contents of an incoming http request to a server\nand responding to that request.\n The memory returned by all methods are owned by the request and are only valid for the lifetime of the request. If you want to persist these values you should create copies of them.","Members":[{"MemberType":1,"Id":"GetRequestHeader","Name":"GetRequestHeader","Description":"Get the value of a header in the request","ReturnType":"HRESULT","ReturnDescription":"S_OK if the buffer was the correct length or was NULL, E_NOT_SET if no header exists, otherwise E_NOT_SUFFICIENT_BUFFER if the buffer size was insufficient","ReturnTypeRefId":null,"Args":[{"Name":"name","Type":"const small *","TypeRefId":null,"Description":"The name of the header"},{"Name":"value","Type":"small *","TypeRefId":null,"Description":"A buffer to store the header value in"},{"Name":"length","Type":"UINT64 *","TypeRefId":null,"Description":"The length of the buffer provided to store the value above. Will be set to the length required"}],"Const":false},{"MemberType":1,"Id":"GetRequestMethod","Name":"GetRequestMethod","Description":"Gets the HTTP method used in the request","ReturnType":"HRESULT","ReturnDescription":"S_OK if the buffer was the correct length or was NULL, otherwise E_NOT_SUFFICIENT_BUFFER if the buffer size was insufficient","ReturnTypeRefId":null,"Args":[{"Name":"method","Type":"small *","TypeRefId":null,"Description":"A buffer to store the method in"},{"Name":"length","Type":"UINT64 *","TypeRefId":null,"Description":"The length of the buffer provided to store the value above. Will be set to the length required"}],"Const":false},{"MemberType":1,"Id":"GetRequestPath","Name":"GetRequestPath","Description":"Gets the path of the request","ReturnType":"HRESULT","ReturnDescription":"S_OK if the buffer was the correct length or was NULL, otherwise E_NOT_SUFFICIENT_BUFFER if the buffer size was insufficient","ReturnTypeRefId":null,"Args":[{"Name":"path","Type":"small *","TypeRefId":null,"Description":"A buffer to store the path in"},{"Name":"length","Type":"UINT64 *","TypeRefId":null,"Description":"The length of the buffer provided to store the value above. Will be set to the length required"}],"Const":false},{"MemberType":1,"Id":"GetRequestBody","Name":"GetRequestBody","Description":"Gets the body of the request. NOTE: this is not necessarily a valid C string\nand may not be null terminated","ReturnType":"HRESULT","ReturnDescription":"S_OK if the buffer was the correct length or was NULL, otherwise E_NOT_SUFFICIENT_BUFFER if the buffer size was insufficient","ReturnTypeRefId":null,"Args":[{"Name":"body","Type":"small *","TypeRefId":null,"Description":"A buffer to store the request body in"},{"Name":"length","Type":"UINT64 *","TypeRefId":null,"Description":"The length of the buffer provided to store the value above. Will be set to the length required"}],"Const":false},{"MemberType":1,"Id":"SetResponseHeader","Name":"SetResponseHeader","Description":"Sets a header in the response","ReturnType":"IMGDFHttpServerRequest *","ReturnDescription":"This request object for chaining","ReturnTypeRefId":"IMGDFHttpServerRequest","Args":[{"Name":"name","Type":"const small *","TypeRefId":null,"Description":"The name of the header to set"},{"Name":"value","Type":"const small *","TypeRefId":null,"Description":"The value to set for the header"}],"Const":false},{"MemberType":1,"Id":"SetResponseBody","Name":"SetResponseBody","Description":"Sets the body of the response","ReturnType":"IMGDFHttpServerRequest *","ReturnDescription":"This request object for chaining","ReturnTypeRefId":"IMGDFHttpServerRequest","Args":[{"Name":"body","Type":"const small *","TypeRefId":null,"Description":"The body content to set"},{"Name":"bodyLength","Type":"UINT64","TypeRefId":null,"Description":"The length of the body content"}],"Const":false},{"MemberType":1,"Id":"SetResponseCode","Name":"SetResponseCode","Description":"Sets the HTTP status code for the response","ReturnType":"IMGDFHttpServerRequest *","ReturnDescription":"This request object for chaining","ReturnTypeRefId":"IMGDFHttpServerRequest","Args":[{"Name":"code","Type":"INT32","TypeRefId":null,"Description":"The HTTP status code to set"}],"Const":false},{"MemberType":1,"Id":"SendResponse","Name":"SendResponse","Description":"Sends the response back to the client","ReturnType":"void","ReturnDescription":null,"ReturnTypeRefId":null,"Args":[],"Const":false}]},{"InheritsFromTypeRefIds":[],"InheritsFromUnreferencedType":["IUnknown"],"Id":"IMGDFInputManager","Name":"IMGDFInputManager","Description":"Provides a means for modules to access information regarding user input\nfrom the mouse, keyboard, and xinput controllers","Members":[{"MemberType":1,"Id":"ShowCursor","Name":"ShowCursor","Description":"Determines whether the OS cursor is displayed or not","ReturnType":"void","ReturnDescription":null,"ReturnTypeRefId":null,"Args":[{"Name":"show","Type":"BOOL","TypeRefId":null,"Description":"Whether to show the cursor or not"}],"Const":false},{"MemberType":1,"Id":"IsKeyDown","Name":"IsKeyDown","Description":"Determines if a key is presed","ReturnType":"BOOL","ReturnDescription":"True if the key is being held down","ReturnTypeRefId":null,"Args":[{"Name":"key","Type":"UINT16","TypeRefId":null,"Description":"The Microsoft Virtual key code representing the desired key (see\n  here for a list\n  http://msdn.microsoft.com/en-us/library/windows/desktop/dd375731%28v=vs.85%29.aspx)"}],"Const":false},{"MemberType":1,"Id":"IsKeyUp","Name":"IsKeyUp","Description":"Determines if a key is NOT pressed","ReturnType":"BOOL","ReturnDescription":"True if the key is not being pressed","ReturnTypeRefId":null,"Args":[{"Name":"key","Type":"UINT16","TypeRefId":null,"Description":"The Microsoft Virtual key code representing the desired key (see\n  here for a list\n  http://msdn.microsoft.com/en-us/library/windows/desktop/dd375731%28v=vs.85%29.aspx)"}],"Const":false},{"MemberType":1,"Id":"IsKeyPress","Name":"IsKeyPress","Description":"Determines if a keypress has occured","ReturnType":"BOOL","ReturnDescription":"True if the key has been pressed (i.e pressed down then released)","ReturnTypeRefId":null,"Args":[{"Name":"key","Type":"UINT16","TypeRefId":null,"Description":"The Microsoft Virtual key code representing the desired key (see\n  here for a list\n  http://msdn.microsoft.com/en-us/library/windows/desktop/dd375731%28v=vs.85%29.aspx)"}],"Const":false},{"MemberType":1,"Id":"GetMouseX","Name":"GetMouseX","Description":"Get the x position of the mouse","ReturnType":"INT32","ReturnDescription":"The x position of the mouse relative to the left of the screen in\n  pixels","ReturnTypeRefId":null,"Args":[],"Const":false},{"MemberType":1,"Id":"GetMouseY","Name":"GetMouseY","Description":"Get the y position of the mouse","ReturnType":"INT32","ReturnDescription":"The y position of the mouse relative to the top of the screen in\n  pixels","ReturnTypeRefId":null,"Args":[],"Const":false},{"MemberType":1,"Id":"GetMouseDX","Name":"GetMouseDX","Description":"Get the x movement of the mouse in the current frame","ReturnType":"INT32","ReturnDescription":"The x movement of the mouse in the current frame","ReturnTypeRefId":null,"Args":[],"Const":false},{"MemberType":1,"Id":"GetMouseDY","Name":"GetMouseDY","Description":"Get the y movement of the mouse in the current frame","ReturnType":"INT32","ReturnDescription":"The y movement of the mouse in the current frame","ReturnTypeRefId":null,"Args":[],"Const":false},{"MemberType":1,"Id":"GetMouseDZ","Name":"GetMouseDZ","Description":"Get the position of the scroll wheel","ReturnType":"short","ReturnDescription":"The change in position of the scroll wheel, this value will\n  increment/decrement in divisions of 120 depending on direction","ReturnTypeRefId":null,"Args":[],"Const":false},{"MemberType":1,"Id":"IsButtonDown","Name":"IsButtonDown","Description":"Determine if a mouse button is down","ReturnType":"BOOL","ReturnDescription":"True if the button is held down","ReturnTypeRefId":null,"Args":[{"Name":"mouseButton","Type":"MGDFMouse","TypeRefId":"MGDFMouse","Description":"The mousebutton code representing the desired button"}],"Const":false},{"MemberType":1,"Id":"IsButtonUp","Name":"IsButtonUp","Description":"Determine if a mouse button is up","ReturnType":"BOOL","ReturnDescription":"True if the button is NOT held down","ReturnTypeRefId":null,"Args":[{"Name":"mouseButton","Type":"MGDFMouse","TypeRefId":"MGDFMouse","Description":"The mousebutton code representing the desired button"}],"Const":false},{"MemberType":1,"Id":"IsButtonClicked","Name":"IsButtonClicked","Description":"Determine if a mouse button was clicked","ReturnType":"BOOL","ReturnDescription":"True if the button has been clicked, i.e held down then released","ReturnTypeRefId":null,"Args":[{"Name":"mouseButton","Type":"MGDFMouse","TypeRefId":"MGDFMouse","Description":"The mousebutton code representing the desired button"}],"Const":false},{"MemberType":1,"Id":"GetGamepadCount","Name":"GetGamepadCount","Description":"Get the maximum number of gamepads available (not all of them may be\n  connected)","ReturnType":"UINT64","ReturnDescription":"The maximum number of gamepads available (not all of them\n  may be connected)","ReturnTypeRefId":null,"Args":[],"Const":false},{"MemberType":1,"Id":"GetGamepads","Name":"GetGamepads","Description":"Gets a list of all compatible gamepads connected to the PC","ReturnType":"void","ReturnDescription":null,"ReturnTypeRefId":null,"Args":[{"Name":"gamepads","Type":"IMGDFGamepad * *","TypeRefId":"IMGDFGamepad","Description":"Pointer to an array of gamepads (must be large enough to fit\n  GetGamepadCount entries)"}],"Const":false}]},{"InheritsFromTypeRefIds":[],"InheritsFromUnreferencedType":["IUnknown"],"Id":"IMGDFLogger","Name":"IMGDFLogger","Description":"The MGDF logging system","Members":[{"MemberType":1,"Id":"SetLoggingLevel","Name":"SetLoggingLevel","Description":"Set the current logging verbosity level","ReturnType":"void","ReturnDescription":null,"ReturnTypeRefId":null,"Args":[{"Name":"level","Type":"MGDFLogLevel","TypeRefId":"MGDFLogLevel","Description":"The verbosity level"}],"Const":false},{"MemberType":1,"Id":"GetLoggingLevel","Name":"GetLoggingLevel","Description":"Get the current logging verbosity level","ReturnType":"MGDFLogLevel","ReturnDescription":"The current logging verbosity level","ReturnTypeRefId":"MGDFLogLevel","Args":[],"Const":false},{"MemberType":1,"Id":"Log","Name":"Log","Description":"Write an entry to the log","ReturnType":"void","ReturnDescription":null,"ReturnTypeRefId":null,"Args":[{"Name":"sender","Type":"const small *","TypeRefId":null,"Description":"The location or component writing the log message"},{"Name":"message","Type":"const small *","TypeRefId":null,"Description":"The content of the log message"},{"Name":"level","Type":"MGDFLogLevel","TypeRefId":"MGDFLogLevel","Description":"The verbosity filter for writing out the message. The message\n   will be written if this is less than or equal to the current logging level"}],"Const":false}]},{"InheritsFromTypeRefIds":[],"InheritsFromUnreferencedType":["IUnknown"],"Id":"IMGDFMetric","Name":"IMGDFMetric","Description":"Allows recording of a metric value over time. These can then be exposed via the\n Prometheus metrics server endpoint when enabled","Members":[{"MemberType":1,"Id":"Record","Name":"Record","Description":"Records the latest value of the metric","ReturnType":"void","ReturnDescription":null,"ReturnTypeRefId":null,"Args":[{"Name":"value","Type":"double","TypeRefId":null,"Description":"The latest value of the metric"},{"Name":"tags","Type":"const MGDFTags *","TypeRefId":"MGDFTags","Description":"Any tags to identify with this recording of the metric, pass NULL if no tags are to be included"}],"Const":false}]},{"InheritsFromTypeRefIds":[],"InheritsFromUnreferencedType":["IUnknown"],"Id":"IMGDFModule","Name":"IMGDFModule","Description":"The interface to be implemented by an MGDF game","Members":[{"MemberType":1,"Id":"STNew","Name":"STNew","Description":"Called by the host after a module is first created and should be used\n   to do perform any initialization required by the module","ReturnType":"BOOL","ReturnDescription":"False if the module experiences a fatal error on initialization","ReturnTypeRefId":null,"Args":[{"Name":"host","Type":"IMGDFSimHost *","TypeRefId":"IMGDFSimHost","Description":"The simulation thread host"}],"Const":false},{"MemberType":1,"Id":"STUpdate","Name":"STUpdate","Description":"Called once per simulation timestep by the host once the game is running\n   and represents the main sim loop","ReturnType":"BOOL","ReturnDescription":"False if the module experiences a fatal error updating the scene","ReturnTypeRefId":null,"Args":[{"Name":"host","Type":"IMGDFSimHost *","TypeRefId":"IMGDFSimHost","Description":"The simulation thread host"},{"Name":"elapsedTime","Type":"double","TypeRefId":null,"Description":"The simulation timestep"}],"Const":false},{"MemberType":1,"Id":"STShutDown","Name":"STShutDown","Description":"Called by the host to tell the module to cleanup and shutdown as soon as\n   possible. This is invoked when external events such as clicking the windows\n   close button try to close the application. After being invoked it is the\n   modules responsibility to call the ->Shutdown() function as soon as\n   possible in order to actually terminate the application. This function may\n   be called multiple times.","ReturnType":"void","ReturnDescription":null,"ReturnTypeRefId":null,"Args":[{"Name":"host","Type":"IMGDFSimHost *","TypeRefId":"IMGDFSimHost","Description":"The simulation thread host"}],"Const":false},{"MemberType":1,"Id":"RTBeforeFirstDraw","Name":"RTBeforeFirstDraw","Description":"Called by the host immediately before the first call to RTDrawScene","ReturnType":"BOOL","ReturnDescription":"False if the module experiences a fatal error","ReturnTypeRefId":null,"Args":[{"Name":"host","Type":"IMGDFRenderHost *","TypeRefId":"IMGDFRenderHost","Description":"The render thread host"}],"Const":false},{"MemberType":1,"Id":"RTDraw","Name":"RTDraw","Description":"Called by the host once per render frame. The module should do any\n   rendering required for the current frame in here","ReturnType":"BOOL","ReturnDescription":"False if the module experiences a fatal error drawing the scene","ReturnTypeRefId":null,"Args":[{"Name":"host","Type":"IMGDFRenderHost *","TypeRefId":"IMGDFRenderHost","Description":"The render thread host"},{"Name":"alpha","Type":"double","TypeRefId":null,"Description":"How far between the current and next simulation frame (0-1)"}],"Const":false},{"MemberType":1,"Id":"RTBeforeBackBufferChange","Name":"RTBeforeBackBufferChange","Description":"Called by the host if the swap chain options need to be changed, or the\n  display window needs to be resized. The module should clear out all\n  references to the previous back buffer so a new resized backbuffer can be\n  set","ReturnType":"BOOL","ReturnDescription":"False if the module experiences a fatal error","ReturnTypeRefId":null,"Args":[{"Name":"host","Type":"IMGDFRenderHost *","TypeRefId":"IMGDFRenderHost","Description":"The render thread host"}],"Const":false},{"MemberType":1,"Id":"RTBackBufferChange","Name":"RTBackBufferChange","Description":"Called by the host after the swap chain options has been changed, or the\n  display window has been resized. The module should re-acquire references to\n  the new backbuffer or resize any backbuffer size dependent resources u","ReturnType":"BOOL","ReturnDescription":"False if the module experiences a fatal error","ReturnTypeRefId":null,"Args":[{"Name":"host","Type":"IMGDFRenderHost *","TypeRefId":"IMGDFRenderHost","Description":"The render thread host"}],"Const":false},{"MemberType":1,"Id":"RTBeforeDeviceReset","Name":"RTBeforeDeviceReset","Description":"Called by the host if the dxgi device needs to be removed. The module should\n  clean out all device dependent resources and references to the old d3d\n  device, which will now be invalid.","ReturnType":"BOOL","ReturnDescription":"False if the module experiences a fatal error","ReturnTypeRefId":null,"Args":[{"Name":"host","Type":"IMGDFRenderHost *","TypeRefId":"IMGDFRenderHost","Description":"The render thread host"}],"Const":false},{"MemberType":1,"Id":"RTDeviceReset","Name":"RTDeviceReset","Description":"Called by the host after the dxgi device has been reset, the module should\n  recreate any device dependent resources that were removed in\n  RTBeforeDeviceReset","ReturnType":"BOOL","ReturnDescription":"False if the module experiences a fatal error","ReturnTypeRefId":null,"Args":[{"Name":"host","Type":"IMGDFRenderHost *","TypeRefId":"IMGDFRenderHost","Description":"The render thread host"}],"Const":false},{"MemberType":1,"Id":"RTShutDown","Name":"RTShutDown","Description":"Called by the host just before Direct3D gets cleaned up","ReturnType":"void","ReturnDescription":null,"ReturnTypeRefId":null,"Args":[{"Name":"host","Type":"IMGDFRenderHost *","TypeRefId":"IMGDFRenderHost","Description":"The render thread host"}],"Const":false},{"MemberType":1,"Id":"Panic","Name":"Panic","Description":"Called by the host when a fatalError event occurs.\n  This method gives the module a chance to clean up any memory/open files etc.\n  as best it can before the host aborts. Methods on the render and sim hosts\n  should not be accessed from within this method","ReturnType":"void","ReturnDescription":null,"ReturnTypeRefId":null,"Args":[],"Const":false}]},{"InheritsFromTypeRefIds":[],"InheritsFromUnreferencedType":["IUnknown"],"Id":"IMGDFPendingRenderSettingsChange","Name":"IMGDFPendingRenderSettingsChange","Description":"Provides an interface for changing various rendering settings. Once released\nthe settings will be applied to the render system on the next frame","Members":[{"MemberType":1,"Id":"SetMaxFrameLatency","Name":"SetMaxFrameLatency","Description":"Sets the number of frames that the swap chain is allowed to queue for\n  rendering.","ReturnType":"void","ReturnDescription":null,"ReturnTypeRefId":null,"Args":[{"Name":"frames","Type":"UINT32","TypeRefId":null,"Description":"The maximum number of frames that can be queued (1+)"}],"Const":false},{"MemberType":1,"Id":"SetVSync","Name":"SetVSync","Description":"Sets the current vsync setting","ReturnType":"void","ReturnDescription":null,"ReturnTypeRefId":null,"Args":[{"Name":"vsync","Type":"BOOL","TypeRefId":null,"Description":"True if vsync is to be enabled"}],"Const":false},{"MemberType":1,"Id":"SetFullscreen","Name":"SetFullscreen","Description":"Sets the current fullscreen setting","ReturnType":"void","ReturnDescription":null,"ReturnTypeRefId":null,"Args":[{"Name":"fullscreen","Type":"const MGDFFullScreenDesc *","TypeRefId":"MGDFFullScreenDesc","Description":"A description of the desired fullscreen settings"}],"Const":false},{"MemberType":1,"Id":"SetBackBufferMultiSampleLevel","Name":"SetBackBufferMultiSampleLevel","Description":"Set the display devices current multisample level","ReturnType":"BOOL","ReturnDescription":"Returns false if the desired multisample level cannot be set.","ReturnTypeRefId":null,"Args":[{"Name":"multisampleLevel","Type":"UINT32","TypeRefId":null,"Description":"The desired multisample level for the backbuffer"}],"Const":false},{"MemberType":1,"Id":"SetCurrentMultiSampleLevel","Name":"SetCurrentMultiSampleLevel","Description":"Set the desired multisample level for off screen render targets. This setting\n  is not used directly by the framework but any client code should query this\n  property when creating render targets that may require multisampling (see also","ReturnType":"BOOL","ReturnDescription":"Returns false if the desired multisample level cannot be set.","ReturnTypeRefId":null,"Args":[{"Name":"multisampleLevel","Type":"UINT32","TypeRefId":null,"Description":"The desired multisample level for off screen render targets"}],"Const":false},{"MemberType":1,"Id":"SetCurrentPrimaryDisplayMode","Name":"SetCurrentPrimaryDisplayMode","Description":"Sets the display mode of the primary display output when running in\n  exclusive fullscreen mode","ReturnType":"BOOL","ReturnDescription":"True if the display mode is supported and can be applied, false otherwise","ReturnTypeRefId":null,"Args":[{"Name":"mode","Type":"const MGDFDisplayMode *","TypeRefId":"MGDFDisplayMode","Description":"The display mode to use"}],"Const":false},{"MemberType":1,"Id":"SetWindowSize","Name":"SetWindowSize","Description":"Sets the size of the window when running in windowed mode. While running in\n  fullscreen, this function has no effect.","ReturnType":"void","ReturnDescription":null,"ReturnTypeRefId":null,"Args":[{"Name":"width","Type":"UINT32","TypeRefId":null,"Description":"The width of the window"},{"Name":"height","Type":"UINT32","TypeRefId":null,"Description":"The height of the window"}],"Const":false},{"MemberType":1,"Id":"SetHDREnabled","Name":"SetHDREnabled","Description":"Sets whether HDR should be enabled when its supported by the current display\n  output","ReturnType":"void","ReturnDescription":null,"ReturnTypeRefId":null,"Args":[{"Name":"enabled","Type":"BOOL","TypeRefId":null,"Description":"Whether HDR should be enabled"}],"Const":false},{"MemberType":1,"Id":"Cancel","Name":"Cancel","Description":"Cancels any pending changes","ReturnType":"void","ReturnDescription":null,"ReturnTypeRefId":null,"Args":[],"Const":false}]},{"InheritsFromTypeRefIds":[],"InheritsFromUnreferencedType":["IUnknown"],"Id":"IMGDFPerformanceCounter","Name":"IMGDFPerformanceCounter","Description":"A names performance counter that can be used to time the duration of\n events. The results of these counters are shown in the MGDF debug overlay\n (press ALT-F12 to see in game)","Members":[{"MemberType":1,"Id":"GetMetric","Name":"GetMetric","Description":"Gets the metric the counter updates","ReturnType":"void","ReturnDescription":null,"ReturnTypeRefId":null,"Args":[{"Name":"metric","Type":"IMGDFMetric * *","TypeRefId":"IMGDFMetric","Description":"The metric the counter updates"}],"Const":false},{"MemberType":1,"Id":"Begin","Name":"Begin","Description":"Begin timing by creating a performance counter scope. The timing is recorded\n at the point the scope is released","ReturnType":"HRESULT","ReturnDescription":"S_OK if the the performance counter scope was created, otherwise will return an error code","ReturnTypeRefId":null,"Args":[{"Name":"tags","Type":"const MGDFTags *","TypeRefId":"MGDFTags","Description":"Any tags to identify with this counter, pass NULL if no tags are to be included"},{"Name":"scope","Type":"IMGDFPerformanceCounterScope **","TypeRefId":"IMGDFPerformanceCounterScope","Description":"Points to the performance counter scope created"}],"Const":false},{"MemberType":1,"Id":"GetAverageValue","Name":"GetAverageValue","Description":"Get the average value recorded by this timer","ReturnType":"double","ReturnDescription":"The average value recorded by the timer","ReturnTypeRefId":null,"Args":[],"Const":false}]},{"InheritsFromTypeRefIds":[],"InheritsFromUnreferencedType":["IUnknown"],"Id":"IMGDFPerformanceCounterScope","Name":"IMGDFPerformanceCounterScope","Description":"Tracks an interval of time being recorded by a performance counter. When\n released the timing recorded will be the duration of time between the scopes\n creation and release","Members":[]},{"InheritsFromTypeRefIds":[],"InheritsFromUnreferencedType":["IUnknown"],"Id":"IMGDFPreferenceSet","Name":"IMGDFPreferenceSet","Description":"A set of preferences that can be persisted","Members":[]},{"InheritsFromTypeRefIds":["IMGDFFile"],"InheritsFromUnreferencedType":[],"Id":"IMGDFReadOnlyFile","Name":"IMGDFReadOnlyFile","Description":"Provides an interface for navigating a readonly file/directory structure in the\nvirtual filesystem. Directories have no data but can have subfiles Files have no\nsubfiles (except for archives) but may have data. Archives that have been added\nto the vfs are mapped as files with the same name as the archive filename, but\nunlike normal files they also have a tree of subdirectories containing the\nuncompressed archive data","Members":[{"MemberType":1,"Id":"GetParent","Name":"GetParent","Description":"Gets the parent of this file. If this file is the root of the virtual\n  filesystem, then this will be nullptr","ReturnType":"BOOL","ReturnDescription":"If this file is the root of the filesystem, then return false","ReturnTypeRefId":null,"Args":[{"Name":"parent","Type":"IMGDFReadOnlyFile * *","TypeRefId":"IMGDFReadOnlyFile","Description":"Pointer to the parent of this file."}],"Const":false},{"MemberType":1,"Id":"GetChild","Name":"GetChild","Description":"Gets a child of this file with the given name (if any)","ReturnType":"BOOL","ReturnDescription":"True if the child could be found","ReturnTypeRefId":null,"Args":[{"Name":"name","Type":"const wchar_t *","TypeRefId":null,"Description":"The child name of this file"},{"Name":"child","Type":"IMGDFReadOnlyFile **","TypeRefId":"IMGDFReadOnlyFile","Description":"The child file of the current file. If no such file exists, nullptr is\n  returned"}],"Const":false},{"MemberType":1,"Id":"GetAllChildren","Name":"GetAllChildren","Description":"Get all the children of this file (non-recursive)","ReturnType":"HRESULT","ReturnDescription":"S_OK if all the children could be stored in the provided buffer or the buffer was NULL, E_NOT_SUFFICIENT_BUFFER otherwise","ReturnTypeRefId":null,"Args":[{"Name":"buffer","Type":"IMGDFReadOnlyFile * *","TypeRefId":"IMGDFReadOnlyFile","Description":"An array to store the results"},{"Name":"length","Type":"UINT64 *","TypeRefId":null,"Description":"The length of the buffer provided to store the value above. Will be set to the length required"}],"Const":false},{"MemberType":1,"Id":"IsArchive","Name":"IsArchive","Description":"Determines if the file is a (or is a member of) an archive file","ReturnType":"BOOL","ReturnDescription":"True if the file is a (or is a member of) an archive file","ReturnTypeRefId":null,"Args":[],"Const":false},{"MemberType":1,"Id":"CopyTo","Name":"CopyTo","Description":"Copies this file or folder to the desired writeable target location","ReturnType":"HRESULT","ReturnDescription":"S_OK if the file/folder could be copied, otherwise E_FAIL","ReturnTypeRefId":null,"Args":[{"Name":"destination","Type":"IMGDFWriteableFile *","TypeRefId":"IMGDFWriteableFile","Description":"The target location for this file/folder. If the destination exists\n  it should be deleted first or else this call will fail."}],"Const":false}]},{"InheritsFromTypeRefIds":[],"InheritsFromUnreferencedType":["IUnknown"],"Id":"IMGDFReadOnlyVirtualFileSystem","Name":"IMGDFReadOnlyVirtualFileSystem","Description":"Provides an interface for accessing the readonly filesystem, which is a fast\nread only interface to access game content files. The root MGDF filesystem is\nmounted from the game/content folder.","Members":[{"MemberType":1,"Id":"GetFile","Name":"GetFile","Description":"Get the file/folder/archive in the specified logical directory. paths are\n  delimited using the / character and names are case sensitive. The\n  /game/content folder in the MGDF install root folder is mounted as the root of\n  the logical filesystem, and no access outside of this folder is permitted.","ReturnType":"BOOL","ReturnDescription":"True if the file could be found","ReturnTypeRefId":null,"Args":[{"Name":"logicalPath","Type":"const wchar_t *","TypeRefId":null,"Description":"The vfs path to the file"},{"Name":"file","Type":"IMGDFReadOnlyFile **","TypeRefId":"IMGDFReadOnlyFile","Description":"Pointer to the file/folder/archive in the specified logical directory. paths\n  are delimited using the / character and names are case sensitive"}],"Const":false},{"MemberType":1,"Id":"GetRoot","Name":"GetRoot","Description":"Get the root node of the filesystem. In the physical filesystem this\n  corresponds to the /game/content folder.","ReturnType":"void","ReturnDescription":null,"ReturnTypeRefId":null,"Args":[{"Name":"root","Type":"IMGDFReadOnlyFile * *","TypeRefId":"IMGDFReadOnlyFile","Description":"Pointer to the root node of the filesystem"}],"Const":false}]},{"InheritsFromTypeRefIds":["IMGDFCommonHost"],"InheritsFromUnreferencedType":[],"Id":"IMGDFRenderHost","Name":"IMGDFRenderHost","Description":"Provides an entrypoint for a module to interact with the MGDF host. This\n interface inherits from ICommonHost and provides additional methods which are\n safe to be used ONLY from the render thread.","Members":[{"MemberType":1,"Id":"SetBackBufferRenderTarget","Name":"SetBackBufferRenderTarget","Description":"Set the current back buffer as the render target for the specified d2d\n  device context","ReturnType":"BOOL","ReturnDescription":"True if the back buffer can be set as the render target for the device\n  context","ReturnTypeRefId":null,"Args":[{"Name":"context","Type":"ID2D1DeviceContext *","TypeRefId":"ID2D1DeviceContext","Description":"The d2d device context to set the render target for"}],"Const":false},{"MemberType":1,"Id":"GetBackBuffer","Name":"GetBackBuffer","Description":"Gets the current back buffer texture.","ReturnType":"void","ReturnDescription":null,"ReturnTypeRefId":null,"Args":[{"Name":"backbuffer","Type":"ID3D11Texture2D * *","TypeRefId":null,"Description":"The current back buffer texture. The pointer returned by this method\n  becomes invalid when the modules OnReset event is fired"}],"Const":false},{"MemberType":1,"Id":"GetDepthStencilBuffer","Name":"GetDepthStencilBuffer","Description":"Gets the current depth stencil buffer texture.","ReturnType":"void","ReturnDescription":null,"ReturnTypeRefId":null,"Args":[{"Name":"stencilBuffer","Type":"ID3D11Texture2D * *","TypeRefId":null,"Description":"The current stencil buffer texture. The pointer returned by this method\n  becomes invalid when the modules OnReset event is fired"}],"Const":false},{"MemberType":1,"Id":"GetBackBufferDescription","Name":"GetBackBufferDescription","Description":"Gets the description of the backbuffer and depthStencilBuffer textures.","ReturnType":"void","ReturnDescription":null,"ReturnTypeRefId":null,"Args":[{"Name":"backBufferDesc","Type":"D3D11_TEXTURE2D_DESC *","TypeRefId":null,"Description":"The backbuffer description to populate. If null is\n  passed, this field is not populated"},{"Name":"depthStencilBufferDesc","Type":"D3D11_TEXTURE2D_DESC *","TypeRefId":null,"Description":"The backbuffer description to populate. If\n  null is passed, this field is not populated"}],"Const":false},{"MemberType":1,"Id":"CreateGPUCounter","Name":"CreateGPUCounter","Description":"Create a performance counter for profiling GPU time taken in DirectX API\n   calls. When no longer used it should be Released","ReturnType":"HRESULT","ReturnDescription":"E_FAIL if GPU counters are unsupported (using D3D_FEATURE_LEVEL_9_3 or less)\n   otherwise returns S_OK","ReturnTypeRefId":null,"Args":[{"Name":"metric","Type":"IMGDFMetric *","TypeRefId":"IMGDFMetric","Description":"The metric the counter should update"},{"Name":"context","Type":"ID3D11DeviceContext *","TypeRefId":null,"Description":"The device context this counter measures"},{"Name":"counter","Type":"IMGDFPerformanceCounter * *","TypeRefId":"IMGDFPerformanceCounter","Description":"Points to the created counter"}],"Const":false}]},{"InheritsFromTypeRefIds":[],"InheritsFromUnreferencedType":["IUnknown"],"Id":"IMGDFRenderSettingsManager","Name":"IMGDFRenderSettingsManager","Description":"Provides an interface for getting and setting the hosts various display settings","Members":[{"MemberType":1,"Id":"GetSDRBackBufferFormat","Name":"GetSDRBackBufferFormat","Description":"Gets the format of the backbuffer when rendering on an SDR display","ReturnType":"DXGI_FORMAT","ReturnDescription":"The backbuffer format","ReturnTypeRefId":null,"Args":[],"Const":false},{"MemberType":1,"Id":"GetHDRBackBufferFormat","Name":"GetHDRBackBufferFormat","Description":"Gets the format of the backbuffer when rendering on an HDR display","ReturnType":"DXGI_FORMAT","ReturnDescription":"The backbuffer format","ReturnTypeRefId":null,"Args":[],"Const":false},{"MemberType":1,"Id":"GetMaxFrameLatency","Name":"GetMaxFrameLatency","Description":"Gets the number of frames that the swap chain is allowed to queue for\n  rendering.","ReturnType":"UINT32","ReturnDescription":"True if vsync is enabled","ReturnTypeRefId":null,"Args":[],"Const":false},{"MemberType":1,"Id":"GetVSync","Name":"GetVSync","Description":"Gets the current vsync setting","ReturnType":"BOOL","ReturnDescription":"True if vsync is enabled","ReturnTypeRefId":null,"Args":[],"Const":false},{"MemberType":1,"Id":"GetFullscreen","Name":"GetFullscreen","Description":"Gets the current fullscreen setting","ReturnType":"void","ReturnDescription":null,"ReturnTypeRefId":null,"Args":[{"Name":"fullscreen","Type":"MGDFFullScreenDesc *","TypeRefId":"MGDFFullScreenDesc","Description":"A description of the current fullscreen settings"}],"Const":false},{"MemberType":1,"Id":"GetMultiSampleLevelCount","Name":"GetMultiSampleLevelCount","Description":"Get the number of supported multisample levels","ReturnType":"UINT64","ReturnDescription":"The number of supported multisample levels","ReturnTypeRefId":null,"Args":[],"Const":false},{"MemberType":1,"Id":"GetMultiSampleLevel","Name":"GetMultiSampleLevel","Description":"Get the available multisample level supported by the display device at the\n  given index ( 0 to GetMultiSampleLevelCount() - 1 )","ReturnType":"BOOL","ReturnDescription":"True if a supported multisample level is present at the given\n  index, false otherwise.","ReturnTypeRefId":null,"Args":[{"Name":"index","Type":"UINT64","TypeRefId":null,"Description":"The multisample index"},{"Name":"level","Type":"UINT32 *","TypeRefId":null,"Description":"Returns the multisample level at the given index"}],"Const":false},{"MemberType":1,"Id":"GetBackBufferMultiSampleLevel","Name":"GetBackBufferMultiSampleLevel","Description":"Get the current multisample level in use by the device","ReturnType":"UINT32","ReturnDescription":"The current multisample level in use by the device","ReturnTypeRefId":null,"Args":[],"Const":false},{"MemberType":1,"Id":"GetCurrentMultiSampleLevel","Name":"GetCurrentMultiSampleLevel","Description":"Get the current desired multisample level for off screen render targets","ReturnType":"UINT32","ReturnDescription":"The current desired multisample level for off screen render targets","ReturnTypeRefId":null,"Args":[{"Name":"quality","Type":"UINT32 *","TypeRefId":null,"Description":"If specified this parameter will be initialized with the\n  maximum multisampling quality setting for the current multisample level"}],"Const":false},{"MemberType":1,"Id":"GetPrimaryDisplayModeCount","Name":"GetPrimaryDisplayModeCount","Description":"Get the number of supported display modes on the primary output","ReturnType":"UINT64","ReturnDescription":"The number of supported display modes","ReturnTypeRefId":null,"Args":[],"Const":false},{"MemberType":1,"Id":"GetPrimaryDisplayMode","Name":"GetPrimaryDisplayMode","Description":"Get a supported display mode for the primary output at the given index (0 to\n  GetPrimaryDisplayModeCount - 1)","ReturnType":"BOOL","ReturnDescription":"True if a display mode exists at a particular index","ReturnTypeRefId":null,"Args":[{"Name":"index","Type":"UINT64","TypeRefId":null,"Description":"The display mode index"},{"Name":"mode","Type":"MGDFDisplayMode *","TypeRefId":"MGDFDisplayMode","Description":"Will be set to the the display mode at the given index"}],"Const":false},{"MemberType":1,"Id":"GetPrimaryDisplayModes","Name":"GetPrimaryDisplayModes","Description":"Get all the supported display modes for the primary output","ReturnType":"void","ReturnDescription":null,"ReturnTypeRefId":null,"Args":[{"Name":"modes","Type":"MGDFDisplayMode * *","TypeRefId":"MGDFDisplayMode","Description":"An array big enough to hold GetPrimaryDisplayModeCount() modes"}],"Const":false},{"MemberType":1,"Id":"GetPrimaryDisplayModeFromDimensions","Name":"GetPrimaryDisplayModeFromDimensions","Description":"Get the display mode from the primary output matching the requested width and\n  height, if no\n  matching display mode is found, false is returned. If HDR is enabled, and supported\n  an HDR display mode will be preferentially chosen","ReturnType":"BOOL","ReturnDescription":"True if a supported display mode exists for the given width and height","ReturnTypeRefId":null,"Args":[{"Name":"width","Type":"UINT32","TypeRefId":null,"Description":"The desired width of the display mode"},{"Name":"height","Type":"UINT32","TypeRefId":null,"Description":"The desired height of the display mode"},{"Name":"mode","Type":"MGDFDisplayMode *","TypeRefId":"MGDFDisplayMode","Description":"Will be set to the matching display mode found (if any)"}],"Const":false},{"MemberType":1,"Id":"GetNativePrimaryDisplayMode","Name":"GetNativePrimaryDisplayMode","Description":"Get the display mode matching the native width and height, of the primary\n  output. If HDR is enabled, and supported an HDR display mode will be\n  preferentially chosen","ReturnType":"BOOL","ReturnDescription":"True if a supported display mode exists for the native output width & height","ReturnTypeRefId":null,"Args":[{"Name":"mode","Type":"MGDFDisplayMode *","TypeRefId":"MGDFDisplayMode","Description":"Will be set to the current display mode found"}],"Const":false},{"MemberType":1,"Id":"GetCurrentPrimaryDisplayMode","Name":"GetCurrentPrimaryDisplayMode","Description":"Get the current display mode for the primary output being used when running in\n  exclusive fullscreen mode","ReturnType":"MGDFDisplayMode *","ReturnDescription":"The current display mode being used (a pointer to mode)","ReturnTypeRefId":"MGDFDisplayMode","Args":[{"Name":"mode","Type":"MGDFDisplayMode *","TypeRefId":"MGDFDisplayMode","Description":"Will be set to the current display mode being used."}],"Const":false},{"MemberType":1,"Id":"GetScreenX","Name":"GetScreenX","Description":"Get the current screen width, based on the primary display mode in exclusive\n  fullscreen, or on the window dimensions otherwise","ReturnType":"UINT32","ReturnDescription":"The current screen width","ReturnTypeRefId":null,"Args":[],"Const":false},{"MemberType":1,"Id":"GetScreenY","Name":"GetScreenY","Description":"Get the current screen height, based on the current display mode in\n  exclusive fullscreen, or on the window dimensions otherwise","ReturnType":"UINT32","ReturnDescription":"Thr current screen height","ReturnTypeRefId":null,"Args":[],"Const":false},{"MemberType":1,"Id":"GetHDREnabled","Name":"GetHDREnabled","Description":"Get whether HDR should be enabled when its supported by the current display\n  output","ReturnType":"BOOL","ReturnDescription":"Is hdr enabled","ReturnTypeRefId":null,"Args":[],"Const":false},{"MemberType":1,"Id":"GetCurrentOutputDisplayInfo","Name":"GetCurrentOutputDisplayInfo","Description":"Get information about the current display","ReturnType":"void","ReturnDescription":null,"ReturnTypeRefId":null,"Args":[{"Name":"info","Type":"MGDFOutputDisplayInfo *","TypeRefId":"MGDFOutputDisplayInfo","Description":"A pointer to the display info structure to be filled in"}],"Const":false},{"MemberType":1,"Id":"GetCurrentOutputDPI","Name":"GetCurrentOutputDPI","Description":"Get the DPI of the current display output. This can change from frame to\n  frame, from frame to frame, so shouldn't be cached.","ReturnType":"UINT","ReturnDescription":"The DPI of the current display output","ReturnTypeRefId":null,"Args":[],"Const":false},{"MemberType":1,"Id":"CreatePendingSettingsChange","Name":"CreatePendingSettingsChange","Description":"Create a pending changeset to the render settings","ReturnType":"void","ReturnDescription":null,"ReturnTypeRefId":null,"Args":[{"Name":"changeset","Type":"IMGDFPendingRenderSettingsChange * *","TypeRefId":"IMGDFPendingRenderSettingsChange","Description":"A pointer to the pending changeset created"}],"Const":false},{"MemberType":1,"Id":"GetPreferences","Name":"GetPreferences","Description":"Gets the current persistable render settings.","ReturnType":"void","ReturnDescription":null,"ReturnTypeRefId":null,"Args":[{"Name":"preferences","Type":"IMGDFPreferenceSet * *","TypeRefId":"IMGDFPreferenceSet","Description":"A pointer to a preference set that can be passed into the\n  IMGDFGame SetPreferences method to set the preferences"}],"Const":false}]},{"InheritsFromTypeRefIds":[],"InheritsFromUnreferencedType":["IUnknown"],"Id":"IMGDFSaveManager","Name":"IMGDFSaveManager","Description":"An interface to control saving/loading gamestate data","Members":[{"MemberType":1,"Id":"GetSaveCount","Name":"GetSaveCount","Description":"Get the number of saved gamestates available","ReturnType":"UINT64","ReturnDescription":"The number of saved gamestates available","ReturnTypeRefId":null,"Args":[],"Const":false},{"MemberType":1,"Id":"GetSave","Name":"GetSave","Description":"Get the saved state at the given index.","ReturnType":"HRESULT","ReturnDescription":"S_OK if a valid gamestate exists at the given index, otherwise an error code is returned","ReturnTypeRefId":null,"Args":[{"Name":"index","Type":"UINT64","TypeRefId":null,"Description":"Which gamestate, valid values are 0 to GetSaveCount - 1."},{"Name":"save","Type":"IMGDFGameState * *","TypeRefId":"IMGDFGameState","Description":"Pointer to the gamestate at the given index"}],"Const":false},{"MemberType":1,"Id":"DeleteSave","Name":"DeleteSave","Description":"Deletes a saved gamestate","ReturnType":"HRESULT","ReturnDescription":"S_OK if the gamestate could be deleted, otherwise an error code is returned","ReturnTypeRefId":null,"Args":[{"Name":"state","Type":"IMGDFGameState *","TypeRefId":"IMGDFGameState","Description":"A gamestate previously returned from GetSave"}],"Const":false},{"MemberType":1,"Id":"CreateGameState","Name":"CreateGameState","Description":"Creates a new empty gamestate without metadata or any persisted data","ReturnType":"void","ReturnDescription":null,"ReturnTypeRefId":null,"Args":[{"Name":"save","Type":"IMGDFGameState * *","TypeRefId":"IMGDFGameState","Description":"A pointer to the created gamestate."}],"Const":false}]},{"InheritsFromTypeRefIds":["IMGDFCommonHost"],"InheritsFromUnreferencedType":[],"Id":"IMGDFSimHost","Name":"IMGDFSimHost","Description":"Provides an entrypoint for a module to interact with the MGDF host. This\ninterface inherits from IMGDFCommonHost and provides additional methods which\nare safe to be used ONLY from the sim thread.","Members":[{"MemberType":1,"Id":"GetSaves","Name":"GetSaves","Description":"Gets the save manager","ReturnType":"void","ReturnDescription":null,"ReturnTypeRefId":null,"Args":[{"Name":"save","Type":"IMGDFSaveManager * *","TypeRefId":"IMGDFSaveManager","Description":"The save manager object"}],"Const":false},{"MemberType":1,"Id":"GetGame","Name":"GetGame","Description":"Get information regarding the current game and its preferences","ReturnType":"void","ReturnDescription":null,"ReturnTypeRefId":null,"Args":[{"Name":"game","Type":"IMGDFGame * *","TypeRefId":"IMGDFGame","Description":"Pointer to object containing information regarding the game and its preferences"}],"Const":false},{"MemberType":1,"Id":"GetSound","Name":"GetSound","Description":"Get the sound manager","ReturnType":"void","ReturnDescription":null,"ReturnTypeRefId":null,"Args":[{"Name":"sound","Type":"IMGDFSoundManager * *","TypeRefId":"IMGDFSoundManager","Description":"The sound manager, nullptr if the audio subsystem failed to\n  initialize"}],"Const":false},{"MemberType":1,"Id":"GetStatistics","Name":"GetStatistics","Description":"Get the statistics manager","ReturnType":"void","ReturnDescription":null,"ReturnTypeRefId":null,"Args":[{"Name":"statistics","Type":"IMGDFStatisticsManager * *","TypeRefId":"IMGDFStatisticsManager","Description":"The statistics manager"}],"Const":false},{"MemberType":1,"Id":"GetInput","Name":"GetInput","Description":"Get the input manager","ReturnType":"void","ReturnDescription":null,"ReturnTypeRefId":null,"Args":[{"Name":"input","Type":"IMGDFInputManager * *","TypeRefId":"IMGDFInputManager","Description":"Pointer to an input manager"}],"Const":false},{"MemberType":1,"Id":"ShutDown","Name":"ShutDown","Description":"Tells the host to shut down the game immediately","ReturnType":"void","ReturnDescription":null,"ReturnTypeRefId":null,"Args":[],"Const":false},{"MemberType":1,"Id":"QueueShutDown","Name":"QueueShutDown","Description":"Tells the host to invoke the modules shutdown callback","ReturnType":"void","ReturnDescription":null,"ReturnTypeRefId":null,"Args":[],"Const":false},{"MemberType":1,"Id":"CreateHttpRequest","Name":"CreateHttpRequest","Description":"Create a pending http request. The request isn't actually sent until the\n  Send method is called on the request object","ReturnType":"HRESULT","ReturnDescription":"S_OK if the request could be created, otherwise an error code is returned","ReturnTypeRefId":null,"Args":[{"Name":"url","Type":"const small *","TypeRefId":null,"Description":"The url to send the request to"},{"Name":"request","Type":"IMGDFHttpClientRequest * *","TypeRefId":"IMGDFHttpClientRequest","Description":"The created request object"}],"Const":false},{"MemberType":1,"Id":"CreateHttpRequestGroup","Name":"CreateHttpRequestGroup","Description":"Create an http request group. These are used to group related requests and\n  responses","ReturnType":"HRESULT","ReturnDescription":"S_OK if the request group could be created, otherwise an error code is returned","ReturnTypeRefId":null,"Args":[{"Name":"group","Type":"IMGDFHttpClientRequestGroup * *","TypeRefId":"IMGDFHttpClientRequestGroup","Description":"The created request group object"}],"Const":false},{"MemberType":1,"Id":"CreateWebSocket","Name":"CreateWebSocket","Description":"Create a websocket connection","ReturnType":"HRESULT","ReturnDescription":"S_OK if the websocket could be created, otherwise an error code is returned","ReturnTypeRefId":null,"Args":[{"Name":"url","Type":"const small *","TypeRefId":null,"Description":"The url to connect to"},{"Name":"socket","Type":"IMGDFWebSocket **","TypeRefId":"IMGDFWebSocket","Description":"The created websocket object"}],"Const":false},{"MemberType":1,"Id":"CreateWebServer","Name":"CreateWebServer","Description":"Create a web server that can handle http and web socket requests","ReturnType":"HRESULT","ReturnDescription":"S_OK if the webserver could be created, otherwise an error code is returned","ReturnTypeRefId":null,"Args":[{"Name":"port","Type":"unsigned int","TypeRefId":null,"Description":"For the server to listen on"},{"Name":"websocketPath","Type":"const small *","TypeRefId":null,"Description":"Any requests matching this path glob will be upgraded to a websocket connection. If null, all requests will be treated as regular HTTP requests"},{"Name":"server","Type":"IMGDFWebServer **","TypeRefId":"IMGDFWebServer","Description":"The created web server object"}],"Const":false}]},{"InheritsFromTypeRefIds":[],"InheritsFromUnreferencedType":["IUnknown"],"Id":"IMGDFSound","Name":"IMGDFSound","Description":"An sound source in 3d space","Members":[{"MemberType":1,"Id":"GetName","Name":"GetName","Description":"The name of the sound","ReturnType":"HRESULT","ReturnDescription":"S_OK if the name buffer was the correct length or was NULL, otherwise E_NOT_SUFFICIENT_BUFFER","ReturnTypeRefId":null,"Args":[{"Name":"name","Type":"wchar_t *","TypeRefId":null,"Description":"Buffer to store the sound name"},{"Name":"length","Type":"UINT64 *","TypeRefId":null,"Description":"The length of the buffer provided to store the value above. Will be set to the length required"}],"Const":false},{"MemberType":1,"Id":"GetPosition","Name":"GetPosition","Description":"The position of the sound","ReturnType":"MGDFSoundPosition *","ReturnDescription":"The position of the sound","ReturnTypeRefId":"MGDFSoundPosition","Args":[{"Name":"position","Type":"MGDFSoundPosition *","TypeRefId":"MGDFSoundPosition","Description":"The position of the sound"}],"Const":false},{"MemberType":1,"Id":"GetVelocity","Name":"GetVelocity","Description":"The velocity of the sound","ReturnType":"MGDFSoundPosition *","ReturnDescription":"The velocity of the sound","ReturnTypeRefId":"MGDFSoundPosition","Args":[{"Name":"velocity","Type":"MGDFSoundPosition *","TypeRefId":"MGDFSoundPosition","Description":"The velocity of the sound"}],"Const":false},{"MemberType":1,"Id":"SetPosition","Name":"SetPosition","Description":"Set the position of the sound","ReturnType":"MGDFSoundPosition *","ReturnDescription":"The position of the sound","ReturnTypeRefId":"MGDFSoundPosition","Args":[{"Name":"position","Type":"MGDFSoundPosition *","TypeRefId":"MGDFSoundPosition","Description":"The position of the sound"}],"Const":false},{"MemberType":1,"Id":"SetVelocity","Name":"SetVelocity","Description":"Set the velocity of the sound","ReturnType":"MGDFSoundPosition *","ReturnDescription":"The velocity of the sound","ReturnTypeRefId":"MGDFSoundPosition","Args":[{"Name":"velocity","Type":"MGDFSoundPosition *","TypeRefId":"MGDFSoundPosition","Description":"The velocity of the sound"}],"Const":false},{"MemberType":1,"Id":"GetInnerRange","Name":"GetInnerRange","Description":"The distance (from the observer) at which the sound intensity reaches its\n  maximum. Getting closer than this will not cause the sound intensity to get\n  any greater","ReturnType":"float","ReturnDescription":"The distance (from the observer) at which the sound\n  intensity reaches its maximum. Getting closer than this will not cause the\n  sound intensity to get any greater","ReturnTypeRefId":null,"Args":[],"Const":false},{"MemberType":1,"Id":"SetInnerRange","Name":"SetInnerRange","Description":"Set The distance (from the observer) at which the sound intensity reaches its\n   maximum. Getting closer than this will not cause the sound intensity to get\n   any greater","ReturnType":"void","ReturnDescription":null,"ReturnTypeRefId":null,"Args":[{"Name":"innerRange","Type":"float","TypeRefId":null,"Description":"The distance (from the observer) at which the\n   sound intensity reaches its maximum. Getting closer than this will not cause\n   the sound intensity to get any greater"}],"Const":false},{"MemberType":1,"Id":"GetOuterRange","Name":"GetOuterRange","Description":"The distance (from the observer) at which the sound intensity reaches 0","ReturnType":"float","ReturnDescription":"The distance (from the observer) at which the sound intensity reaches\n  its 0","ReturnTypeRefId":null,"Args":[],"Const":false},{"MemberType":1,"Id":"SetOuterRange","Name":"SetOuterRange","Description":"Set The distance (from the observer) at which the sound intensity reaches 0","ReturnType":"void","ReturnDescription":null,"ReturnTypeRefId":null,"Args":[{"Name":"outerRange","Type":"float","TypeRefId":null,"Description":"The distance (from the observer) at which the sound\n   intensity reaches 0"}],"Const":false},{"MemberType":1,"Id":"GetSourceRelative","Name":"GetSourceRelative","Description":"Does the sound stay relative to the listeners position or is it fixed in\n   absolute space","ReturnType":"BOOL","ReturnDescription":"True if the sound is always relative to the listeners\n   position","ReturnTypeRefId":null,"Args":[],"Const":false},{"MemberType":1,"Id":"SetSourceRelative","Name":"SetSourceRelative","Description":"Does the sound stay relative to the listeners position or is it fixed in\n   absolute space","ReturnType":"void","ReturnDescription":null,"ReturnTypeRefId":null,"Args":[{"Name":"sourceRelative","Type":"BOOL","TypeRefId":null,"Description":"True if the sound is always relative to\n   the listeners position"}],"Const":false},{"MemberType":1,"Id":"GetVolume","Name":"GetVolume","Description":"Get the current volume of the sound (ignoring attenuation due to position)","ReturnType":"float","ReturnDescription":"The current volume of the sound (ignoring attenuation due to position)","ReturnTypeRefId":null,"Args":[],"Const":false},{"MemberType":1,"Id":"SetVolume","Name":"SetVolume","Description":"Set the current volume of the sound (ignoring attenuation due to position)","ReturnType":"void","ReturnDescription":null,"ReturnTypeRefId":null,"Args":[{"Name":"volume","Type":"float","TypeRefId":null,"Description":"The current volume of the sound (ignoring attenuation due to\n  position)"}],"Const":false},{"MemberType":1,"Id":"GetPitch","Name":"GetPitch","Description":"Get the pitch of the current sound","ReturnType":"float","ReturnDescription":"1.0 if the pitch is unchanged. between 0.5 and 1.0 is lower, and\n  between 1.0 and 2.0 is higher pitched","ReturnTypeRefId":null,"Args":[],"Const":false},{"MemberType":1,"Id":"SetPitch","Name":"SetPitch","Description":"Set the pitch of the current sound","ReturnType":"void","ReturnDescription":null,"ReturnTypeRefId":null,"Args":[{"Name":"pitch","Type":"float","TypeRefId":null,"Description":"1.0 if the pitch is unchanged. between 0.5 and 1.0 is lower, and\n  between 1.0 and 2.0 is higher pitched"}],"Const":false},{"MemberType":1,"Id":"SetPriority","Name":"SetPriority","Description":"Set the priority used by the sound system to determine which sounds get\n  deactivated if not enough sound sources are available to play all sounds","ReturnType":"void","ReturnDescription":null,"ReturnTypeRefId":null,"Args":[{"Name":"priority","Type":"INT32","TypeRefId":null,"Description":"The priority to use for the sound. Higher values mean higher\n  priority"}],"Const":false},{"MemberType":1,"Id":"GetPriority","Name":"GetPriority","Description":"Get the priority used by the sound system to determine which sounds get\n  deactivated if not enough sound sources are available to play all sounds","ReturnType":"INT32","ReturnDescription":"Priority the priority to use for the sound. Higher values mean higher\n  priority","ReturnTypeRefId":null,"Args":[],"Const":false},{"MemberType":1,"Id":"GetLooping","Name":"GetLooping","Description":"Get whether the sound will loop playback continously","ReturnType":"BOOL","ReturnDescription":"True if the sound should loop continously","ReturnTypeRefId":null,"Args":[],"Const":false},{"MemberType":1,"Id":"SetLooping","Name":"SetLooping","Description":"Set whether the sound will loop playback continously","ReturnType":"void","ReturnDescription":"Looping true if the sound should loop continously","ReturnTypeRefId":null,"Args":[{"Name":"looping","Type":"BOOL","TypeRefId":null,"Description":"True if the sound should loop playback, false otherwise"}],"Const":false},{"MemberType":1,"Id":"Stop","Name":"Stop","Description":"Stop the playing of the current playlist if it was playing or paused (resets\n  playlist to the beginning aswell)","ReturnType":"void","ReturnDescription":null,"ReturnTypeRefId":null,"Args":[],"Const":false},{"MemberType":1,"Id":"Pause","Name":"Pause","Description":"Pause the playing of the current playlist (if it was playing)","ReturnType":"void","ReturnDescription":null,"ReturnTypeRefId":null,"Args":[],"Const":false},{"MemberType":1,"Id":"Play","Name":"Play","Description":"Resume the playing of the current playlist (if it was paused or stopped)","ReturnType":"void","ReturnDescription":null,"ReturnTypeRefId":null,"Args":[],"Const":false},{"MemberType":1,"Id":"IsStopped","Name":"IsStopped","Description":"Determines if the playlist has stopped play","ReturnType":"BOOL","ReturnDescription":"True if the playlist has stopped play","ReturnTypeRefId":null,"Args":[],"Const":false},{"MemberType":1,"Id":"IsPaused","Name":"IsPaused","Description":"Determines if the playlist has paused play","ReturnType":"BOOL","ReturnDescription":"True if the playlist has paused play","ReturnTypeRefId":null,"Args":[],"Const":false},{"MemberType":1,"Id":"IsPlaying","Name":"IsPlaying","Description":"Determines if the playlist is playing","ReturnType":"BOOL","ReturnDescription":"True if the playlist is playing","ReturnTypeRefId":null,"Args":[],"Const":false},{"MemberType":1,"Id":"IsActive","Name":"IsActive","Description":"Is the sound currently playing or has it been culled","ReturnType":"BOOL","ReturnDescription":"True if the sound manager has culled this sound source","ReturnTypeRefId":null,"Args":[],"Const":false}]},{"InheritsFromTypeRefIds":[],"InheritsFromUnreferencedType":["IUnknown"],"Id":"IMGDFSoundManager","Name":"IMGDFSoundManager","Description":"An interface for controlling positional sounds as well as streaming sound\n sources","Members":[{"MemberType":1,"Id":"GetListenerPosition","Name":"GetListenerPosition","Description":"Determine the position of the listener (i.e. the player)","ReturnType":"MGDFSoundPosition *","ReturnDescription":"The position of the listener (i.e. the player)","ReturnTypeRefId":"MGDFSoundPosition","Args":[{"Name":"listener","Type":"MGDFSoundPosition *","TypeRefId":"MGDFSoundPosition","Description":"The position of the listener (i.e. the player)"}],"Const":false},{"MemberType":1,"Id":"GetListenerVelocity","Name":"GetListenerVelocity","Description":"Determine the velocity of the listener (i.e. the player)","ReturnType":"MGDFSoundPosition *","ReturnDescription":"The velocity of the listener (i.e. the player)","ReturnTypeRefId":"MGDFSoundPosition","Args":[{"Name":"velocity","Type":"MGDFSoundPosition *","TypeRefId":"MGDFSoundPosition","Description":"The velocity of the listener (i.e. the player)"}],"Const":false},{"MemberType":1,"Id":"GetListenerOrientationForward","Name":"GetListenerOrientationForward","Description":"Get the vector representing the forward direction of the listener (i.e. the\n   player)","ReturnType":"MGDFSoundPosition *","ReturnDescription":"The vector representing the forward direction of the listener","ReturnTypeRefId":"MGDFSoundPosition","Args":[{"Name":"orientationForward","Type":"MGDFSoundPosition *","TypeRefId":"MGDFSoundPosition","Description":"The vector representing the forward direction of the listener"}],"Const":false},{"MemberType":1,"Id":"GetListenerOrientationUp","Name":"GetListenerOrientationUp","Description":"Get the vector representing the upward direction of the listener (i.e. the\n   player)","ReturnType":"MGDFSoundPosition *","ReturnDescription":"The vector representing the upward direction of the listener","ReturnTypeRefId":"MGDFSoundPosition","Args":[{"Name":"orientationUp","Type":"MGDFSoundPosition *","TypeRefId":"MGDFSoundPosition","Description":"The vector representing the upward direction of the listener"}],"Const":false},{"MemberType":1,"Id":"SetListenerPosition","Name":"SetListenerPosition","Description":"Set the position of the listener (i.e. the player)","ReturnType":"MGDFSoundPosition *","ReturnDescription":"The position of the listener (i.e. the player)","ReturnTypeRefId":"MGDFSoundPosition","Args":[{"Name":"listener","Type":"MGDFSoundPosition *","TypeRefId":"MGDFSoundPosition","Description":"The position of the listener (i.e. the player)"}],"Const":false},{"MemberType":1,"Id":"SetListenerVelocity","Name":"SetListenerVelocity","Description":"Set the velocity of the listener (i.e. the player)","ReturnType":"MGDFSoundPosition *","ReturnDescription":"The velocity of the listener (i.e. the player)","ReturnTypeRefId":"MGDFSoundPosition","Args":[{"Name":"velocity","Type":"MGDFSoundPosition *","TypeRefId":"MGDFSoundPosition","Description":"The velocity of the listener (i.e. the player)"}],"Const":false},{"MemberType":1,"Id":"SetListenerOrientationForward","Name":"SetListenerOrientationForward","Description":"Set the vector representing the forward direction of the listener (i.e. the\n   player)","ReturnType":"MGDFSoundPosition *","ReturnDescription":"The vector representing the forward direction of the listener","ReturnTypeRefId":"MGDFSoundPosition","Args":[{"Name":"orientationForward","Type":"MGDFSoundPosition *","TypeRefId":"MGDFSoundPosition","Description":"The vector representing the forward direction of\n  the listener"}],"Const":false},{"MemberType":1,"Id":"SetListenerOrientationUp","Name":"SetListenerOrientationUp","Description":"Set the vector representing the upward direction of the listener (i.e. the\n   player)","ReturnType":"MGDFSoundPosition *","ReturnDescription":"The vector representing the upward direction of the listener","ReturnTypeRefId":"MGDFSoundPosition","Args":[{"Name":"orientationUp","Type":"MGDFSoundPosition *","TypeRefId":"MGDFSoundPosition","Description":"The vector representing the upward direction of the listener"}],"Const":false},{"MemberType":1,"Id":"GetSoundVolume","Name":"GetSoundVolume","Description":"Get the master volume (0-1) All sounds volumes are relative to this setting","ReturnType":"float","ReturnDescription":"The master volume","ReturnTypeRefId":null,"Args":[],"Const":false},{"MemberType":1,"Id":"SetSoundVolume","Name":"SetSoundVolume","Description":"Set the master volume (0-1) All sounds volumes are relative to this setting","ReturnType":"void","ReturnDescription":null,"ReturnTypeRefId":null,"Args":[{"Name":"volume","Type":"float","TypeRefId":null,"Description":"The master volume"}],"Const":false},{"MemberType":1,"Id":"GetStreamVolume","Name":"GetStreamVolume","Description":"Get the master volume for streamed sounds (0-1) All streams volumes are\n  relative to this setting","ReturnType":"float","ReturnDescription":"The master stream volume","ReturnTypeRefId":null,"Args":[],"Const":false},{"MemberType":1,"Id":"SetStreamVolume","Name":"SetStreamVolume","Description":"Set the master volume for streamed sounds (0-1) All streams volumes are\n  relative to this setting","ReturnType":"void","ReturnDescription":null,"ReturnTypeRefId":null,"Args":[{"Name":"volume","Type":"float","TypeRefId":null,"Description":"The master stream volume"}],"Const":false},{"MemberType":1,"Id":"GetEnableAttenuation","Name":"GetEnableAttenuation","Description":"Get whether sounds should attenuate with thier distance from the listener","ReturnType":"BOOL","ReturnDescription":"True if sounds should attenuate with thier distance from the listener","ReturnTypeRefId":null,"Args":[],"Const":false},{"MemberType":1,"Id":"SetEnableAttenuation","Name":"SetEnableAttenuation","Description":"Set whether sounds should attenuate with thier distance from the listener","ReturnType":"void","ReturnDescription":null,"ReturnTypeRefId":null,"Args":[{"Name":"enableAttenuation","Type":"BOOL","TypeRefId":null,"Description":"True if sounds should attenuate with thier distance\n  from the listener"}],"Const":false},{"MemberType":1,"Id":"GetDopplerShiftFactor","Name":"GetDopplerShiftFactor","Description":"Get whether sounds will doppler shift based on thier relative velocity to the\n  listener","ReturnType":"float","ReturnDescription":"Whether sounds will doppler shift based on thier relative velocity to the listener","ReturnTypeRefId":null,"Args":[],"Const":false},{"MemberType":1,"Id":"SetDopplerShiftFactor","Name":"SetDopplerShiftFactor","Description":"Set whether sounds will doppler shift based on thier relative velocity to the\n  listener","ReturnType":"void","ReturnDescription":null,"ReturnTypeRefId":null,"Args":[{"Name":"dopplerShiftFactor","Type":"float","TypeRefId":null,"Description":"True if sounds should doppler shift based\n  on thier relative velocity to the listener"}],"Const":false},{"MemberType":1,"Id":"GetSpeedOfSound","Name":"GetSpeedOfSound","Description":"Get the speed of sound used to calculate doppler shifting of sounds","ReturnType":"float","ReturnDescription":"The speed of sound used to calculate doppler shifting of sounds","ReturnTypeRefId":null,"Args":[],"Const":false},{"MemberType":1,"Id":"SetSpeedOfSound","Name":"SetSpeedOfSound","Description":"Set the speed of sound used to calculate doppler shifting of sounds","ReturnType":"void","ReturnDescription":null,"ReturnTypeRefId":null,"Args":[{"Name":"speedOfSound","Type":"float","TypeRefId":null,"Description":"The speed of sound used to calculate doppler shifting of\n  sounds"}],"Const":false},{"MemberType":1,"Id":"CreateSound","Name":"CreateSound","Description":"Create a sound by loading a file in the VFS into memory. When no INT32er used\n  it should be Released","ReturnType":"HRESULT","ReturnDescription":"S_OK if the sound was created successfully, otherwise an error code will be returned","ReturnTypeRefId":null,"Args":[{"Name":"file","Type":"IMGDFReadOnlyFile *","TypeRefId":"IMGDFReadOnlyFile","Description":"The data source for the sound"},{"Name":"priority","Type":"INT32","TypeRefId":null,"Description":"The priority of the sound (used to determine what should play if no\n  free audio sources are available"},{"Name":"sound","Type":"IMGDFSound * *","TypeRefId":"IMGDFSound","Description":"If the sound is created successfully, this will point to the created sound"}],"Const":false},{"MemberType":1,"Id":"CreateSoundStream","Name":"CreateSoundStream","Description":"Create a sound stream from a file in the VFS. When no longer used it should be\n  Released","ReturnType":"HRESULT","ReturnDescription":"S_OK if the stream was created successfully, otherwise an error code will\n  be returned","ReturnTypeRefId":null,"Args":[{"Name":"file","Type":"IMGDFReadOnlyFile *","TypeRefId":"IMGDFReadOnlyFile","Description":"The data source for the sound stream"},{"Name":"stream","Type":"IMGDFSoundStream * *","TypeRefId":"IMGDFSoundStream","Description":"If the stream is created successfully, this will point to the created stream"}],"Const":false},{"MemberType":1,"Id":"GetPreferences","Name":"GetPreferences","Description":"Gets the current persistable sound settings. Note: this only consists of\n  master volume settings. Other settings like attenuation & speedOfSound need to\n  be reset on startup","ReturnType":"void","ReturnDescription":null,"ReturnTypeRefId":null,"Args":[{"Name":"preferences","Type":"IMGDFPreferenceSet * *","TypeRefId":"IMGDFPreferenceSet","Description":"A pointer to a preference set that can be passed into the\n  IMGDFGame setPreferences method to set the preferences"}],"Const":false}]},{"InheritsFromTypeRefIds":[],"InheritsFromUnreferencedType":["IUnknown"],"Id":"IMGDFSoundStream","Name":"IMGDFSoundStream","Description":"A vorbis sound stream","Members":[{"MemberType":1,"Id":"GetName","Name":"GetName","Description":"The name of the sound stream","ReturnType":"HRESULT","ReturnDescription":"S_OK if the name buffer was the correct length or was NULL, otherwise E_NOT_SUFFICIENT_BUFFER","ReturnTypeRefId":null,"Args":[{"Name":"name","Type":"wchar_t *","TypeRefId":null,"Description":"Buffer to store the sound stream name"},{"Name":"length","Type":"UINT64 *","TypeRefId":null,"Description":"The length of the buffer provided to store the value above. Will be set to the length required"}],"Const":false},{"MemberType":1,"Id":"GetVolume","Name":"GetVolume","Description":"Get the volume level (0-1)","ReturnType":"float","ReturnDescription":"The volume level (0-1)","ReturnTypeRefId":null,"Args":[],"Const":false},{"MemberType":1,"Id":"SetVolume","Name":"SetVolume","Description":"Set the volume level (0-1)","ReturnType":"void","ReturnDescription":null,"ReturnTypeRefId":null,"Args":[{"Name":"volume","Type":"float","TypeRefId":null,"Description":"The volume level to set"}],"Const":false},{"MemberType":1,"Id":"GetPosition","Name":"GetPosition","Description":"The position of playback in the stream (0 -> GetLength)","ReturnType":"UINT32","ReturnDescription":"The position of playback in the stream","ReturnTypeRefId":null,"Args":[],"Const":false},{"MemberType":1,"Id":"GetLength","Name":"GetLength","Description":"The total length of the stream","ReturnType":"UINT32","ReturnDescription":"The total length of the stream","ReturnTypeRefId":null,"Args":[],"Const":false},{"MemberType":1,"Id":"Stop","Name":"Stop","Description":"Stop the playing of the current stream if it was playing or paused (resets it\n  to the beginning aswell)","ReturnType":"void","ReturnDescription":null,"ReturnTypeRefId":null,"Args":[],"Const":false},{"MemberType":1,"Id":"Pause","Name":"Pause","Description":"Pause the playing of the current stream (if it was playing)","ReturnType":"void","ReturnDescription":null,"ReturnTypeRefId":null,"Args":[],"Const":false},{"MemberType":1,"Id":"Play","Name":"Play","Description":"Resume the playing of the current playlist (if it was paused or stopped)","ReturnType":"HRESULT","ReturnDescription":"Success if the sound could resume playing, otherwise returns an error\n  code.","ReturnTypeRefId":null,"Args":[],"Const":false},{"MemberType":1,"Id":"IsStopped","Name":"IsStopped","Description":"Determines if the stream has stopped play","ReturnType":"BOOL","ReturnDescription":"True if the stream has stopped play","ReturnTypeRefId":null,"Args":[],"Const":false},{"MemberType":1,"Id":"IsPaused","Name":"IsPaused","Description":"Determines if the stream has paused play","ReturnType":"BOOL","ReturnDescription":"True if the stream has paused play","ReturnTypeRefId":null,"Args":[],"Const":false},{"MemberType":1,"Id":"IsPlaying","Name":"IsPlaying","Description":"Determines if the stream is playing","ReturnType":"BOOL","ReturnDescription":"True if the stream is playing","ReturnTypeRefId":null,"Args":[],"Const":false}]},{"InheritsFromTypeRefIds":[],"InheritsFromUnreferencedType":["IUnknown"],"Id":"IMGDFStatisticsManager","Name":"IMGDFStatisticsManager","Description":"Provides an interface for pushing statistics to a remote endpoint during a game\n session.","Members":[{"MemberType":1,"Id":"PushString","Name":"PushString","Description":"Pushes a statistic to the remote statistics service (if one is specified)","ReturnType":"void","ReturnDescription":null,"ReturnTypeRefId":null,"Args":[{"Name":"name","Type":"const small *","TypeRefId":null,"Description":"The name of the statistic tracker key"},{"Name":"value","Type":"const small *","TypeRefId":null,"Description":"The value of the statistic"},{"Name":"tags","Type":"const MGDFTags *","TypeRefId":"MGDFTags","Description":"Any tags to pass with the statistic (null if none are to be included)"}],"Const":false},{"MemberType":1,"Id":"PushMetric","Name":"PushMetric","Description":"Pushes a metrics current value to the remote statistics service (if one is\n   specified)","ReturnType":"void","ReturnDescription":null,"ReturnTypeRefId":null,"Args":[{"Name":"metric","Type":"IMGDFMetric *","TypeRefId":"IMGDFMetric","Description":"The metric to push, this will be passed to the statistics service as a name/value pair"}],"Const":false}]},{"InheritsFromTypeRefIds":[],"InheritsFromUnreferencedType":["IUnknown"],"Id":"IMGDFTimer","Name":"IMGDFTimer","Description":"Provides an interface to the hosts high resolution CPU timer","Members":[{"MemberType":1,"Id":"GetCurrentTimeTicks","Name":"GetCurrentTimeTicks","Description":"Get the current system time in ticks","ReturnType":"LARGE_INTEGER","ReturnDescription":"The current system time in ticks","ReturnTypeRefId":null,"Args":[],"Const":false},{"MemberType":1,"Id":"GetTimerFrequency","Name":"GetTimerFrequency","Description":"Get the current system timer frequency","ReturnType":"LARGE_INTEGER","ReturnDescription":"The current system timer frequency","ReturnTypeRefId":null,"Args":[],"Const":false},{"MemberType":1,"Id":"ConvertDifferenceToSeconds","Name":"ConvertDifferenceToSeconds","Description":"Convert two system tick times into a duration in seconds","ReturnType":"double","ReturnDescription":"The difference betweeen the two parameters converted into seconds","ReturnTypeRefId":null,"Args":[{"Name":"newTime","Type":"LARGE_INTEGER","TypeRefId":null,"Description":"The newer of the two times"},{"Name":"oldTime","Type":"LARGE_INTEGER","TypeRefId":null,"Description":"The older of the two times"}],"Const":false}]},{"InheritsFromTypeRefIds":[],"InheritsFromUnreferencedType":["IUnknown"],"Id":"IMGDFWebServer","Name":"IMGDFWebServer","Description":"An interface for creating and managing a websocket server","Members":[{"MemberType":1,"Id":"RequestRecieved","Name":"RequestRecieved","Description":"Get whether any new incoming requests were made. This should be called repeatedly until it returns false to process all incoming requests.","ReturnType":"BOOL","ReturnDescription":"True if a new incoming connection was made","ReturnTypeRefId":null,"Args":[{"Name":"request","Type":"MGDFWebServerRequest *","TypeRefId":"MGDFWebServerRequest","Description":". The type of incoming request, this is a union of either a websocket connection or a standard HTTP request."}],"Const":false},{"MemberType":1,"Id":"Listening","Name":"Listening","Description":"Whether the server is listening for incoming connections","ReturnType":"BOOL","ReturnDescription":"True if the server is listening for incoming connections","ReturnTypeRefId":null,"Args":[],"Const":false}]},{"InheritsFromTypeRefIds":[],"InheritsFromUnreferencedType":["IUnknown"],"Id":"IMGDFWebSocket","Name":"IMGDFWebSocket","Description":"An interface for sending and recieving websocket messages","Members":[{"MemberType":1,"Id":"Send","Name":"Send","Description":"Sends a message to the websocket server","ReturnType":"void","ReturnDescription":null,"ReturnTypeRefId":null,"Args":[{"Name":"data","Type":"void *","TypeRefId":null,"Description":"The data to send"},{"Name":"len","Type":"UINT64","TypeRefId":null,"Description":"The length of the data to send"},{"Name":"binary","Type":"BOOL","TypeRefId":null,"Description":"True if the data is binary, false if it is a string"}],"Const":false},{"MemberType":1,"Id":"CanRecieve","Name":"CanRecieve","Description":"Determines if there is a message available to be recieved","ReturnType":"BOOL","ReturnDescription":"True if a message is available to be recieved","ReturnTypeRefId":null,"Args":[{"Name":"len","Type":"UINT64 *","TypeRefId":null,"Description":"The length of the message to be recieved"}],"Const":false},{"MemberType":1,"Id":"Receive","Name":"Receive","Description":"Recieves a message from the other end of the websocket connection","ReturnType":"HRESULT","ReturnDescription":"S_OK if there was a message to receive and the buffer was large enough to store it, otherwise E_NOT_SUFFICIENT_BUFFER is returned","ReturnTypeRefId":null,"Args":[{"Name":"message","Type":"void *","TypeRefId":null,"Description":"The message to recieve"},{"Name":"len","Type":"UINT64","TypeRefId":null,"Description":"The length of the buffer to recieve the message"},{"Name":"binary","Type":"BOOL *","TypeRefId":null,"Description":"True if the message is binary, false if it is a string"}],"Const":false},{"MemberType":1,"Id":"GetConnectionStatus","Name":"GetConnectionStatus","Description":"Gets the current status of the connection","ReturnType":"HRESULT","ReturnDescription":"S_OK if the LastError buffer was large enough to store the error message, otherwise E_NOT_SUFFICIENT_BUFFER is returned & LastErrorLength will be set to the required length","ReturnTypeRefId":null,"Args":[{"Name":"status","Type":"MGDFWebSocketConnectionStatus *","TypeRefId":"MGDFWebSocketConnectionStatus","Description":"The current status of the connection. The LastError field should point to a buffer of at least LastErrorLength bytes"}],"Const":false}]},{"InheritsFromTypeRefIds":["IMGDFFile"],"InheritsFromUnreferencedType":[],"Id":"IMGDFWriteableFile","Name":"IMGDFWriteableFile","Description":"Provides an interface for navigating a writeable file/directory structure. These\ninclude writeable folders such as the working directory and save game folders.","Members":[{"MemberType":1,"Id":"Exists","Name":"Exists","Description":"Does the file/folder exist","ReturnType":"BOOL","ReturnDescription":"True if the file/folder exists","ReturnTypeRefId":null,"Args":[],"Const":false},{"MemberType":1,"Id":"GetParent","Name":"GetParent","Description":"Gets the parent of this file. If this file is the root of the virtual\n  filesystem, then this will be nullptr","ReturnType":"BOOL","ReturnDescription":"If this file is the root of the filesystem then return false, otherwise true.","ReturnTypeRefId":null,"Args":[{"Name":"parent","Type":"IMGDFWriteableFile * *","TypeRefId":"IMGDFWriteableFile","Description":"Pointer to the parent of this file."}],"Const":false},{"MemberType":1,"Id":"GetChild","Name":"GetChild","Description":"Gets a child of this file with the given name (if any)","ReturnType":"BOOL","ReturnDescription":"True if the child file could be found","ReturnTypeRefId":null,"Args":[{"Name":"name","Type":"const wchar_t *","TypeRefId":null,"Description":"The child name of this file"},{"Name":"child","Type":"IMGDFWriteableFile **","TypeRefId":"IMGDFWriteableFile","Description":"The child file of the current file"}],"Const":false},{"MemberType":1,"Id":"GetAllChildren","Name":"GetAllChildren","Description":"Get all the children of this file (non-recursive)","ReturnType":"HRESULT","ReturnDescription":"S_OK if all the children could be stored in the provided buffer or the buffer was NULL, E_NOT_SUFFICIENT_BUFFER otherwise","ReturnTypeRefId":null,"Args":[{"Name":"buffer","Type":"IMGDFWriteableFile * *","TypeRefId":"IMGDFWriteableFile","Description":"An array to store the results"},{"Name":"length","Type":"UINT64 *","TypeRefId":null,"Description":"The length of the buffer provided to store the value above. Will be set to the length required."}],"Const":false},{"MemberType":1,"Id":"OpenWrite","Name":"OpenWrite","Description":"Attempt to open the file for writing if the path to this file doesn't exist\n  it will be created","ReturnType":"HRESULT","ReturnDescription":"S_OK if the writer could be created, otherwise E_FAIL or E_ACCESSDENIED","ReturnTypeRefId":null,"Args":[{"Name":"writer","Type":"IMGDFFileWriter * *","TypeRefId":"IMGDFFileWriter","Description":"Pointer to a writer instance to be created"}],"Const":false},{"MemberType":1,"Id":"CreateFolder","Name":"CreateFolder","Description":"Creates this as a folder (and any necessary parent folders along the way)","ReturnType":"HRESULT","ReturnDescription":"S_OK if the folder could be created, otherwise E_FAIL","ReturnTypeRefId":null,"Args":[],"Const":false},{"MemberType":1,"Id":"Delete","Name":"Delete","Description":"Deletes this file or folder (and its descendants). Note the root of a VFS\n  cannot be deleted and will fail if attempted","ReturnType":"HRESULT","ReturnDescription":"S_OK if the file or folder could be deleted, otherwise E_FAIL","ReturnTypeRefId":null,"Args":[],"Const":false},{"MemberType":1,"Id":"MoveTo","Name":"MoveTo","Description":"Moves this file or folder to the desired target location","ReturnType":"HRESULT","ReturnDescription":"S_OK if the file/folder could be moved, otherwise E_FAIL","ReturnTypeRefId":null,"Args":[{"Name":"destination","Type":"IMGDFWriteableFile *","TypeRefId":"IMGDFWriteableFile","Description":"The target location for this file/folder. If the destination exists\n  it should be deleted first or else this call will fail."}],"Const":false},{"MemberType":1,"Id":"CopyTo","Name":"CopyTo","Description":"Copies this file or folder to the desired target location","ReturnType":"HRESULT","ReturnDescription":"S_OK if the file/folder could be copied, otherwise E_FAIL","ReturnTypeRefId":null,"Args":[{"Name":"destination","Type":"IMGDFWriteableFile *","TypeRefId":"IMGDFWriteableFile","Description":"The target location for this file/folder. If the destination exists\n  it should be deleted first or else this call will fail."}],"Const":false}]},{"InheritsFromTypeRefIds":[],"InheritsFromUnreferencedType":["IUnknown"],"Id":"IMGDFWriteableVirtualFileSystem","Name":"IMGDFWriteableVirtualFileSystem","Description":"Provides an interface for accessing the writable filesystem, which is used for\nsave game folders and the working directory","Members":[{"MemberType":1,"Id":"GetFile","Name":"GetFile","Description":"Get the file/folder/archive in the specified logical directory. paths are\n  delimited using the / character and names are case sensitive.","ReturnType":"BOOL","ReturnDescription":"True if the file could be found","ReturnTypeRefId":null,"Args":[{"Name":"logicalPath","Type":"const wchar_t *","TypeRefId":null,"Description":"The vfs path to the file"},{"Name":"file","Type":"IMGDFWriteableFile **","TypeRefId":"IMGDFWriteableFile","Description":"Pointer to the file/folder/archive in the specified logical directory. paths\n  are delimited using the / character and names are case sensitive"}],"Const":false},{"MemberType":1,"Id":"GetRoot","Name":"GetRoot","Description":"Get the root node of the filesystem. In the physical filesystem this\n  corresponds to the /game/content folder.","ReturnType":"void","ReturnDescription":null,"ReturnTypeRefId":null,"Args":[{"Name":"root","Type":"IMGDFWriteableFile * *","TypeRefId":"IMGDFWriteableFile","Description":"Pointer to the root node of the filesystem"}],"Const":false}]}],"Structs":[{"InheritsFromTypeRefIds":[],"InheritsFromUnreferencedType":[],"Id":"MGDFArchivePathSegment","Name":"MGDFArchivePathSegment","Description":"Part of a logical path to a file in the virtual filesystem representing either a\nfolder or file","Members":[{"MemberType":0,"Id":"Start","Name":"Start","Description":null,"ReturnType":"const wchar_t *","ReturnDescription":null,"ReturnTypeRefId":null,"Args":[],"Const":false},{"MemberType":0,"Id":"Length","Name":"Length","Description":null,"ReturnType":"UINT64","ReturnDescription":null,"ReturnTypeRefId":null,"Args":[],"Const":false}]},{"InheritsFromTypeRefIds":[],"InheritsFromUnreferencedType":[],"Id":"MGDFDisplayMode","Name":"MGDFDisplayMode","Description":"The display settings for a particular display mode","Members":[{"MemberType":0,"Id":"Width","Name":"Width","Description":null,"ReturnType":"UINT32","ReturnDescription":null,"ReturnTypeRefId":null,"Args":[],"Const":false},{"MemberType":0,"Id":"Height","Name":"Height","Description":null,"ReturnType":"UINT32","ReturnDescription":null,"ReturnTypeRefId":null,"Args":[],"Const":false},{"MemberType":0,"Id":"RefreshRateNumerator","Name":"RefreshRateNumerator","Description":null,"ReturnType":"UINT32","ReturnDescription":null,"ReturnTypeRefId":null,"Args":[],"Const":false},{"MemberType":0,"Id":"RefreshRateDenominator","Name":"RefreshRateDenominator","Description":null,"ReturnType":"UINT32","ReturnDescription":null,"ReturnTypeRefId":null,"Args":[],"Const":false},{"MemberType":0,"Id":"SupportsHDR","Name":"SupportsHDR","Description":null,"ReturnType":"BOOL","ReturnDescription":null,"ReturnTypeRefId":null,"Args":[],"Const":false},{"MemberType":0,"Id":"IsNativeSize","Name":"IsNativeSize","Description":null,"ReturnType":"BOOL","ReturnDescription":null,"ReturnTypeRefId":null,"Args":[],"Const":false}]},{"InheritsFromTypeRefIds":[],"InheritsFromUnreferencedType":[],"Id":"MGDFFullScreenDesc","Name":"MGDFFullScreenDesc","Description":"The current fullscreen options","Members":[{"MemberType":0,"Id":"FullScreen","Name":"FullScreen","Description":null,"ReturnType":"BOOL","ReturnDescription":null,"ReturnTypeRefId":null,"Args":[],"Const":false},{"MemberType":0,"Id":"ExclusiveMode","Name":"ExclusiveMode","Description":null,"ReturnType":"BOOL","ReturnDescription":null,"ReturnTypeRefId":null,"Args":[],"Const":false}]},{"InheritsFromTypeRefIds":[],"InheritsFromUnreferencedType":[],"Id":"MGDFOutputDisplayInfo","Name":"MGDFOutputDisplayInfo","Description":"The current outputs HDR display information","Members":[{"MemberType":0,"Id":"SupportsHDR","Name":"SupportsHDR","Description":null,"ReturnType":"BOOL","ReturnDescription":null,"ReturnTypeRefId":null,"Args":[],"Const":false},{"MemberType":0,"Id":"MaxFullFrameLuminance","Name":"MaxFullFrameLuminance","Description":null,"ReturnType":"FLOAT","ReturnDescription":null,"ReturnTypeRefId":null,"Args":[],"Const":false},{"MemberType":0,"Id":"MaxLuminance","Name":"MaxLuminance","Description":null,"ReturnType":"FLOAT","ReturnDescription":null,"ReturnTypeRefId":null,"Args":[],"Const":false},{"MemberType":0,"Id":"MinLuminance","Name":"MinLuminance","Description":null,"ReturnType":"FLOAT","ReturnDescription":null,"ReturnTypeRefId":null,"Args":[],"Const":false},{"MemberType":0,"Id":"SDRWhiteLevel","Name":"SDRWhiteLevel","Description":null,"ReturnType":"ULONG","ReturnDescription":null,"ReturnTypeRefId":null,"Args":[],"Const":false},{"MemberType":0,"Id":"Width","Name":"Width","Description":null,"ReturnType":"UINT32","ReturnDescription":null,"ReturnTypeRefId":null,"Args":[],"Const":false},{"MemberType":0,"Id":"Height","Name":"Height","Description":null,"ReturnType":"UINT32","ReturnDescription":null,"ReturnTypeRefId":null,"Args":[],"Const":false}]},{"InheritsFromTypeRefIds":[],"InheritsFromUnreferencedType":[],"Id":"MGDFSoundPosition","Name":"MGDFSoundPosition","Description":"The position of a sound source in 3d space","Members":[{"MemberType":0,"Id":"x","Name":"x","Description":null,"ReturnType":"float","ReturnDescription":null,"ReturnTypeRefId":null,"Args":[],"Const":false},{"MemberType":0,"Id":"y","Name":"y","Description":null,"ReturnType":"float","ReturnDescription":null,"ReturnTypeRefId":null,"Args":[],"Const":false},{"MemberType":0,"Id":"z","Name":"z","Description":null,"ReturnType":"float","ReturnDescription":null,"ReturnTypeRefId":null,"Args":[],"Const":false}]},{"InheritsFromTypeRefIds":[],"InheritsFromUnreferencedType":[],"Id":"MGDFTags","Name":"MGDFTags","Description":"Allows a metric to be tagged with a collection of name/value pairs","Members":[{"MemberType":0,"Id":"Names","Name":"Names","Description":null,"ReturnType":"const small **","ReturnDescription":null,"ReturnTypeRefId":null,"Args":[],"Const":false},{"MemberType":0,"Id":"Values","Name":"Values","Description":null,"ReturnType":"const small **","ReturnDescription":null,"ReturnTypeRefId":null,"Args":[],"Const":false},{"MemberType":0,"Id":"Count","Name":"Count","Description":null,"ReturnType":"UINT64","ReturnDescription":null,"ReturnTypeRefId":null,"Args":[],"Const":false}]},{"InheritsFromTypeRefIds":[],"InheritsFromUnreferencedType":[],"Id":"MGDFVersion","Name":"MGDFVersion","Description":"Represents a version number","Members":[{"MemberType":0,"Id":"Major","Name":"Major","Description":null,"ReturnType":"INT32","ReturnDescription":null,"ReturnTypeRefId":null,"Args":[],"Const":false},{"MemberType":0,"Id":"Minor","Name":"Minor","Description":null,"ReturnType":"INT32","ReturnDescription":null,"ReturnTypeRefId":null,"Args":[],"Const":false},{"MemberType":0,"Id":"Build","Name":"Build","Description":null,"ReturnType":"INT32","ReturnDescription":null,"ReturnTypeRefId":null,"Args":[],"Const":false},{"MemberType":0,"Id":"Revision","Name":"Revision","Description":null,"ReturnType":"INT32","ReturnDescription":null,"ReturnTypeRefId":null,"Args":[],"Const":false}]},{"InheritsFromTypeRefIds":[],"InheritsFromUnreferencedType":[],"Id":"MGDFWebServerRequest","Name":"MGDFWebServerRequest","Description":"Represents a request made to a webserver. Either a websocket connection or a\nstandard HTTP request.","Members":[{"MemberType":0,"Id":"WebSocket","Name":"WebSocket","Description":null,"ReturnType":"IMGDFWebSocket *","ReturnDescription":null,"ReturnTypeRefId":"IMGDFWebSocket","Args":[],"Const":false},{"MemberType":0,"Id":"HttpRequest","Name":"HttpRequest","Description":null,"ReturnType":"IMGDFHttpServerRequest *","ReturnDescription":null,"ReturnTypeRefId":"IMGDFHttpServerRequest","Args":[],"Const":false}]},{"InheritsFromTypeRefIds":[],"InheritsFromUnreferencedType":[],"Id":"MGDFWebSocketConnectionStatus","Name":"MGDFWebSocketConnectionStatus","Description":"The combined status of a websocket connection including its current state and\nany recent errors","Members":[{"MemberType":0,"Id":"State","Name":"State","Description":null,"ReturnType":"MGDFWebSocketConnectionState","ReturnDescription":null,"ReturnTypeRefId":"MGDFWebSocketConnectionState","Args":[],"Const":false},{"MemberType":0,"Id":"LastError","Name":"LastError","Description":null,"ReturnType":"small *","ReturnDescription":null,"ReturnTypeRefId":null,"Args":[],"Const":false},{"MemberType":0,"Id":"LastErrorLength","Name":"LastErrorLength","Description":null,"ReturnType":"UINT64","ReturnDescription":null,"ReturnTypeRefId":null,"Args":[],"Const":false}]}],"Enums":[{"Id":"MGDFGamepadButton","Description":"All the gamepad button types recognized by the input manager","Name":"MGDFGamepadButton","Values":["MGDF_GAMEPAD_DPAD_UP","MGDF_GAMEPAD_DPAD_DOWN","MGDF_GAMEPAD_DPAD_LEFT","MGDF_GAMEPAD_DPAD_RIGHT","MGDF_GAMEPAD_START","MGDF_GAMEPAD_BACK","MGDF_GAMEPAD_LEFT_THUMB","MGDF_GAMEPAD_RIGHT_THUMB","MGDF_GAMEPAD_LEFT_SHOULDER","MGDF_GAMEPAD_RIGHT_SHOULDER","MGDF_GAMEPAD_A","MGDF_GAMEPAD_B","MGDF_GAMEPAD_X","MGDF_GAMEPAD_Y"]},{"Id":"MGDFLogLevel","Description":"The logging levels available, LOG_ERROR is of the highest importance with\nLOG_HIGH messages being of the least importance","Name":"MGDFLogLevel","Values":["MGDF_LOG_ERROR","MGDF_LOG_LOW","MGDF_LOG_MEDIUM","MGDF_LOG_HIGH"]},{"Id":"MGDFMouse","Description":"This is represents all the various mouse buttons that are recognized by the\ninput manager","Name":"MGDFMouse","Values":["MGDF_MOUSE_LEFT","MGDF_MOUSE_RIGHT","MGDF_MOUSE_MIDDLE"]},{"Id":"MGDFWebSocketConnectionState","Description":"The state of a websocket connection","Name":"MGDFWebSocketConnectionState","Values":["MGDF_WEBSOCKET_CONNECTING","MGDF_WEBSOCKET_OPEN","MGDF_WEBSOCKET_CLOSED",""]}],"Mappings":{"ID2D1Device":"ID2D1Device","ID2D1DeviceContext":"ID2D1DeviceContext","IMGDFDebug":"IMGDFDebug","MGDFVersion":"MGDFVersion","IMGDFPreferenceSet":"IMGDFPreferenceSet","IMGDFGame":"IMGDFGame","MGDFMouse":"MGDFMouse","MGDFGamepadButton":"MGDFGamepadButton","IMGDFGamepad":"IMGDFGamepad","IMGDFInputManager":"IMGDFInputManager","MGDFLogLevel":"MGDFLogLevel","IMGDFLogger":"IMGDFLogger","MGDFTags":"MGDFTags","IMGDFMetric":"IMGDFMetric","IMGDFPerformanceCounterScope":"IMGDFPerformanceCounterScope","IMGDFPerformanceCounter":"IMGDFPerformanceCounter","IMGDFTimer":"IMGDFTimer","MGDFDisplayMode":"MGDFDisplayMode","MGDFFullScreenDesc":"MGDFFullScreenDesc","IMGDFPendingRenderSettingsChange":"IMGDFPendingRenderSettingsChange","MGDFOutputDisplayInfo":"MGDFOutputDisplayInfo","IMGDFRenderSettingsManager":"IMGDFRenderSettingsManager","IMGDFFileReader":"IMGDFFileReader","IMGDFFileWriter":"IMGDFFileWriter","IMGDFFile":"IMGDFFile","IMGDFWriteableVirtualFileSystem":"IMGDFWriteableVirtualFileSystem","IMGDFWriteableFile":"IMGDFWriteableFile","IMGDFReadOnlyVirtualFileSystem":"IMGDFReadOnlyVirtualFileSystem","IMGDFReadOnlyFile":"IMGDFReadOnlyFile","MGDFArchivePathSegment":"MGDFArchivePathSegment","IMGDFArchiveHandler":"IMGDFArchiveHandler","MGDFSoundPosition":"MGDFSoundPosition","IMGDFSound":"IMGDFSound","IMGDFSoundStream":"IMGDFSoundStream","IMGDFSoundManager":"IMGDFSoundManager","IMGDFStatisticsManager":"IMGDFStatisticsManager","IMGDFHttpClientResponse":"IMGDFHttpClientResponse","IMGDFHttpClientRequestGroup":"IMGDFHttpClientRequestGroup","IMGDFHttpClientRequest":"IMGDFHttpClientRequest","IMGDFHttpServerRequest":"IMGDFHttpServerRequest","MGDFWebSocketConnectionState":"MGDFWebSocketConnectionState","MGDFWebSocketConnectionStatus":"MGDFWebSocketConnectionStatus","IMGDFWebSocket":"IMGDFWebSocket","MGDFWebServerRequest":"MGDFWebServerRequest","IMGDFWebServer":"IMGDFWebServer","IMGDFCommonHost":"IMGDFCommonHost","IMGDFRenderHost":"IMGDFRenderHost","IMGDFGameState":"IMGDFGameState","IMGDFSaveManager":"IMGDFSaveManager","IMGDFSimHost":"IMGDFSimHost","IMGDFModule":"IMGDFModule"}}